name: pull-request
run-name: Checks on pull request

on:
  push:
    branches: [master]
  pull_request: null

env:
  RUST_VERSION: 1.69.0
  NIGHTLY_RUST_VERSION: nightly-2023-02-08

jobs:
  trunk-check:
    name: Trunk Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Trunk Check
        uses: trunk-io/trunk-action@v1

  build:
    name: Cargo Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release
        working-directory: yurtc

  cargo-unused-deps-check:
    name: Cargo Unused Dependencies Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }} # `cargo-udeps` requires nightly to run

      - uses: Swatinem/rust-cache@v2

      - name: Install cargo-udeps
        run: cargo install --locked cargo-udeps

      - name: Check Unused Deps
        run: cargo udeps --locked --all-targets
        working-directory: yurtc

  cargo-outdated-deps-check:
    name: Cargo Outdated Dependencies Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - uses: Swatinem/rust-cache@v2

      - name: Install cargo-outdated
        run: cargo install --locked cargo-outdated
        working-directory: yurtc

      - name: Check for outdated patch versions
        run: |
          cargo outdated --root-deps-only | awk -F'  +' '
          BEGIN {status=0}
          {
              split($2, a, "\\."); 
              split($4, b, "\\."); 
              if (a[1] == b[1] && a[2] == b[2] && a[3] < b[3]) {
                  print $0;
                  status=1;
              }
          }
          END {exit status}'
        working-directory: yurtc

  cargo-toml-lint-check:
    name: Cargo.toml Link Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - uses: Swatinem/rust-cache@v2

      - name: Install Cargo.toml linter
        run: cargo install --locked cargo-toml-lint
        working-directory: yurtc

      - name: Run Cargo.toml linter
        run: git ls-files | grep Cargo.toml$ | xargs --verbose -n 1 cargo-toml-lint
        working-directory: yurtc

  cargo-test-workspace:
    name: Cargo Test Workspace
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - uses: Swatinem/rust-cache@v2

      - name: Run workspace tests
        run: cargo test --locked
        working-directory: yurtc
