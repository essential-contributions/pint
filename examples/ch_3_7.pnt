// ANCHOR: consts
const minimum: int = 10;
const maximum: int = 20;

predicate Foo(foo: int, size: int) {
    constraint size >= minimum && foo <= maximum;
}

// ANCHOR_END: consts

// ANCHOR: const_compound_types
const counts = [20, 30, 40];

const default_idx = 1;
const next_count = counts[default_idx + 1];

const min_size = { valid: true, size: 10 };

predicate Bar(my_size: int) {
    constraint !min_size.valid || my_size >= min_size.size;
}
// ANCHOR_END: const_compound_types
