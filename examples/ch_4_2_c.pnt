// ANCHOR: interface 
interface Counter {
    storage {
        counter: int,
    }

    predicate Initialize {
        pub var value: int;
    }

    predicate Increment {
        pub var amount: int;
    }
}
// ANCHOR_END: interface 

// ANCHOR: contract 
storage {
    counter: int,
}

predicate Initialize() {
    pub var value: int;
    state counter: int = mut storage::counter;
    constraint counter' == value;
}

predicate Increment() {
    pub var amount: int;
    state counter: int = mut storage::counter;
    constraint counter' == counter + amount;
}
// ANCHOR_END: contract 
