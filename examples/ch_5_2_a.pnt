// ANCHOR: storage_block
storage {
    // ...
    balances: (b256 => int),
    // ...
}
// ANCHOR_END: storage_block

predicate test {
// ANCHOR: storage_access_1
var from_address: b256;
var receiver_address: b256;
state from_balance = storage::balances[from_address];
state receiver_balance = storage::balances[receiver_address];
// ANCHOR_END: storage_access_1

// ANCHOR: next_state
var my_address: b256;
state my_bal = storage::balances[my_address];
constraint my_bal' == my_bal + 1000000;
// ANCHOR_END: next_state 

// ANCHOR: next_state_with_check
if my_bal != nil {
    constraint my_bal' == my_bal + 1000000;
} else {
    constraint my_bal' == 1000000;
}
// ANCHOR_END: next_state_with_check
}
