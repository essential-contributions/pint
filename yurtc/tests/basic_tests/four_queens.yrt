// 4-Queens problem:: Place 4 queens on an 4x4 chessboard so that none can attack another. 

// Queen i goes in column i in row qi
let q1: int = 1..4;
let q2: int = 1..4;
let q3: int = 1..4;
let q4: int = 1..4;

// Distinc rows: qi != qj for all i, j
constraint q1 != q2;
constraint q1 != q3;
constraint q1 != q4;
constraint q2 != q3;
constraint q2 != q4;
constraint q3 != q4;

// Distinct diagonals: qi + i != qj + j for all i, j
constraint q1 + 1 != q2 + 2;
constraint q1 + 1 != q3 + 3;
constraint q1 + 1 != q4 + 4;
constraint q2 + 2 != q3 + 3;
constraint q2 + 2 != q4 + 4;
constraint q3 + 3 != q4 + 4;

// Upwards and downwards: qi - i != qj - j for all i, j
constraint q1 - 1 != q2 - 2;
constraint q1 - 1 != q3 - 3;
constraint q1 - 1 != q4 - 4;
constraint q2 - 2 != q3 - 3;
constraint q2 - 2 != q4 - 4;
constraint q3 - 3 != q4 - 4;

solve satisfy;

// solution <<<
// ::q1: 3
// ::q2: 1
// ::q3: 4
// ::q4: 2
// >>>
