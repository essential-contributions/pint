let x: int;

constraint x >= -10;
let obj: int = x*x + 2*x - 8;

solve minimize obj;

// intermediate <<<<
// var ::x: int;
// var ::obj: int;
// constraint (::x >= -10);
// constraint (::obj == (((::x * ::x) + (2 * ::x)) - 8));
// solve minimize ::obj;
// >>>

// flattened <<<
// var ::x: int;
// var ::obj: int;
// var __objective: int;
// constraint (::x >= -10);
// constraint (::obj == (((::x * ::x) + (2 * ::x)) - 8));
// constraint (__objective == ::obj);
// solve minimize __objective;
// >>>
