// All the decision variables in this test are known. The only purpose of this test make sure that
// all the listed constraints are satisfied and not conflicting. This helps ensure correctness of
// logical operators in various forms.

let x: int = 10;
let y: int = 20;
let z: int = 30;

let u: real = 40.0;
let w: real = 50.0;

let t: bool = true;
let f: bool = false;

constraint true;
constraint !false;
constraint true || false;
constraint true && (true || false);
constraint t;
constraint !!t;
constraint !f;
constraint t || f;
constraint (t && !!!f) || (t && f);

constraint x == 10 && y != 21 && true && !false;
constraint x != 11 && y == 20;
constraint (x > 9 && x < 11 && z == 30) || y == 21;
constraint (x >= 10 && x < 11 && !(z != 30) && true && !false) || y == 21;
constraint !(x >= 10 && y == 21);
constraint !(x == 11 || y == 21);
constraint !!(x == 10);
constraint !!!!(x == 10);
constraint !(!(x != 11) || !(y != 21));
constraint !(!(x != 10) && !(y != 21));

constraint u >= 40.0 && w <= 50.0;
constraint (u >= 40.0 && u + w == 90.0) || w == 60.0;

solve satisfy;

// solution <<<
// ::x: 10
// ::y: 20
// ::z: 30
// ::u: 40.000
// ::w: 50.000
// ::t: 1
// ::f: 0
// >>>
