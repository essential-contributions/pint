// Interest
let I: real = 0.1;

// Withdrawal amount for each interest period
let R: real = 150.0; 

// Balance at time 0
let P: real;

// Remaining balances
let mortgage: real[25];

constraint forall i in 0..24 {
   mortgage[i] >= 0.0
};

// Initial balance
constraint mortgage[0] == P + (P  * I) - R;

constraint forall i in 1..24 {
    // Add interst and deduct withdrawal amount
    mortgage[i] == mortgage[i-1] + (mortgage[i-1]  * I) - R
};

solve minimize P;

// solution <<<
// ::I: 0.100
// ::R: 150.000
// ::P: 1361.556
// ::mortgage[0]: 1347.712
// ::mortgage[1]: 1332.483
// ::mortgage[2]: 1315.731
// ::mortgage[3]: 1297.304
// ::mortgage[4]: 1277.035
// ::mortgage[5]: 1254.738
// ::mortgage[6]: 1230.212
// ::mortgage[7]: 1203.233
// ::mortgage[8]: 1173.556
// ::mortgage[9]: 1140.912
// ::mortgage[10]: 1105.003
// ::mortgage[11]: 1065.503
// ::mortgage[12]: 1022.054
// ::mortgage[13]: 974.259
// ::mortgage[14]: 921.685
// ::mortgage[15]: 863.854
// ::mortgage[16]: 800.239
// ::mortgage[17]: 730.263
// ::mortgage[18]: 653.289
// ::mortgage[19]: 568.618
// ::mortgage[20]: 475.480
// ::mortgage[21]: 373.028
// ::mortgage[22]: 260.331
// ::mortgage[23]: 136.364
// ::mortgage[24]: 0.000
// objective: 1361.556
// >>>
