constraint a::b::c == d::e;

solve satisfy;

// ast <<<
// constraint (::a::b::c == ::d::e);
// solve satisfy;
// let ::a::b::c: int;
// let ::d::e: int = 10;
// >>>

// compiled_intent <<<
// Intent { states: [], vars: [Variable { name: "::a::b::c", ty: Int }, Variable { name: "::d::e", ty: Int }], constraints: [BinaryOp { op: Equal, lhs: Path("::a::b::c"), rhs: Path("::d::e") }, BinaryOp { op: Equal, lhs: Path("::d::e"), rhs: Immediate(Int(10)) }], directive: Satisfy }
// >>>
