interface Foo {
    storage {
        x: int,
        y: int,
    }

    intent I1 {
        pub var x: int;
        pub var y: b256;
    }
}

intent Simple {
    interface FooInstance1 = Foo(0 + true);
    interface FooInstance2 = Foo("bla");

    var addr: b256;
    interface FooInstance = Foo(addr);
    intent I1Instance1 = FooInstance::I1(0 + true);
    intent I1Instance2 = FooInstance::I1(false);
}

// intermediate <<<
// interface ::Foo {
//     storage {
//         x: int,
//         y: int,
//     }
//     intent I1 {
//         pub var x: int;
//         pub var y: b256;
//     }
// }
// 
// intent ::Simple {
//     interface ::Foo {
//         storage {
//             x: int,
//             y: int,
//         }
//         intent I1 {
//             pub var x: int;
//             pub var y: b256;
//         }
//     }
//     interface ::FooInstance1 = ::Foo((0 + true))
//     interface ::FooInstance2 = ::Foo("bla")
//     interface ::FooInstance = ::Foo(::addr)
//     intent ::I1Instance1 = ::FooInstance::I1((0 + true))
//     intent ::I1Instance2 = ::FooInstance::I1(false)
//     var ::addr: b256;
//     var __::I1Instance1_pathway: int;
//     var __::I1Instance2_pathway: int;
// }
// >>>

// typecheck_failure <<<
// binary operator type error
// @196..200: operator `+` argument has unexpected type `bool`
// address expression type error
// @236..241: address expression has unexpected type `string`
// @236..241: expecting type `b256`
// binary operator type error
// @349..353: operator `+` argument has unexpected type `bool`
// address expression type error
// @397..402: address expression has unexpected type `bool`
// @397..402: expecting type `b256`
// >>>
