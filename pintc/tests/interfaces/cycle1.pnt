// A, B, C create a cycle
predicate A() {
    predicate BI = B();
}

predicate B() {
    predicate CI = C();
}

predicate C() {
    predicate AI = A();
}

// D, E, F create a cycle
predicate D() {
    predicate EI = E();
    predicate AI = A();
}

predicate E() {
    predicate FI = F();
}

predicate F() {
    predicate DI = D();
}

// parsed <<<
// predicate ::A(
//     __::BI_pathway: int,
// ) {
//     predicate ::BI = ::B()
// }
// 
// predicate ::B(
//     __::CI_pathway: int,
// ) {
//     predicate ::CI = ::C()
// }
// 
// predicate ::C(
//     __::AI_pathway: int,
// ) {
//     predicate ::AI = ::A()
// }
// 
// predicate ::D(
//     __::EI_pathway: int,
//     __::AI_pathway: int,
// ) {
//     predicate ::EI = ::E()
//     predicate ::AI = ::A()
// }
// 
// predicate ::E(
//     __::FI_pathway: int,
// ) {
//     predicate ::FI = ::F()
// }
// 
// predicate ::F(
//     __::DI_pathway: int,
// ) {
//     predicate ::DI = ::D()
// }
// >>>

// flattening_failure <<<
// dependency cycle detected between predicates
// @181..192: this predicate is on the dependency cycle
// @291..302: this predicate is on the dependency cycle
// @248..259: this predicate is on the dependency cycle
// dependency between predicates is typically created via predicate instances
// dependency cycle detected between predicates
// @26..37: this predicate is on the dependency cycle
// @112..123: this predicate is on the dependency cycle
// @69..80: this predicate is on the dependency cycle
// dependency between predicates is typically created via predicate instances
// >>>
