interface Foo {
    storage {
        x: int,
        y: int,
    }

    predicate I1(
        x: int,
        y: b256,
    );
}

predicate Simple(
    addr1: b256,
    addr2: b256,
    addr3: b256,
) {

    // Missing interface
    interface Instance1 = MissingInterface(addr1);

    // Missing interface instance
    interface FooInstance = Foo(addr2);
    predicate Bad1 = MissingInterfaceInstance::Foo(addr2);

    // Missing intent
    predicate Missing = FooInstance::MissingPredicate(addr3);

    // Missing pub var
    predicate I1 = FooInstance::I1(addr3);
    state missing_var = I1::missing_var;
}

// parsed <<<
// interface ::Foo {
//     storage {
//         x: int,
//         y: int,
//     }
//     predicate I1 (
//         x: int,
//         y: b256,
//     );
// }
// 
// predicate ::Simple(
//     ::addr1: b256,
//     ::addr2: b256,
//     ::addr3: b256,
//     __::Bad1_pathway: int,
//     __::Missing_pathway: int,
//     __::I1_pathway: int,
// ) {
//     interface ::Instance1 = ::MissingInterface(::addr1)
//     interface ::FooInstance = ::Foo(::addr2)
//     predicate ::Bad1 = ::MissingInterfaceInstance::Foo(::addr2)
//     predicate ::Missing = ::FooInstance::MissingPredicate(::addr3)
//     predicate ::I1 = ::FooInstance::I1(::addr3)
//     state ::missing_var = ::I1::missing_var;
// }
// >>>

// typecheck_failure <<<
// cannot find interface declaration `::MissingInterface`
// @233..278: cannot find interface declaration `::MissingInterface`
// cannot find interface instance `::MissingInterfaceInstance`
// @359..412: cannot find interface instance `::MissingInterfaceInstance`
// cannot find predicate `MissingPredicate` in interface `::Foo`
// @441..497: this predicate instance references predicate `MissingPredicate` which does not exist in interface `::Foo`
// cannot find value `::I1::missing_var` in this scope
// @590..605: not found in this scope
// >>>
