interface Foo {
    storage {
        x: int,
        y: int,
    }

    predicate I1(
        x: int,
        y: b256,
    );
}

predicate Simple(
    addr1: b256,
    addr2: b256,
    addr3: b256,
) {

    // Missing interface
    constraint MissingInterface@[addr1]::Bar@[addr2]();

    // Missing predicate
    constraint Foo@[addr1]::MissingPredicate@[addr3]();

    // wrong number of arguments 
    constraint Foo@[addr1]::I1@[addr3](1, 2, 3);
    constraint Foo@[addr1]::I1@[addr3](1);

    constraint Foo@[addr1]::I1@[addr3](1, true);
    constraint Foo@[addr1]::I1@[addr3]({1, 2}, 3);
}

// parsed <<<
// interface ::Foo {
//     storage {
//         x: int,
//         y: int,
//     }
//     predicate I1 (
//         x: int,
//         y: b256,
//     );
// }
// 
// predicate ::Simple(
//     ::addr1: b256,
//     ::addr2: b256,
//     ::addr3: b256,
// ) {
//     constraint ::MissingInterface@[::addr1]::Bar@[::addr2]();
//     constraint ::Foo@[::addr1]::MissingPredicate@[::addr3]();
//     constraint ::Foo@[::addr1]::I1@[::addr3](1, 2, 3);
//     constraint ::Foo@[::addr1]::I1@[::addr3](1);
//     constraint ::Foo@[::addr1]::I1@[::addr3](1, true);
//     constraint ::Foo@[::addr1]::I1@[::addr3]({1, 2}, 3);
// }
// >>>

// typecheck_failure <<<
// cannot find interface declaration `::MissingInterface`
// @244..283: cannot find interface declaration `::MissingInterface`
// cannot find predicate `MissingPredicate` in interface `::Foo`
// @326..365: this predicate call references predicate `MissingPredicate` which does not exist in interface `::Foo`
// incorrect predicate argument
// @444..445: expected `b256`, found `int`
// @417..449: arguments to this predicate call are incorrect`
// this predicate takes 2 arguments but 3 arguments were supplied
// @417..449: unexpected number of arguments here
// this predicate takes 2 arguments but 1 argument was supplied
// @466..492: unexpected number of arguments here
// incorrect predicate argument
// @537..541: expected `b256`, found `bool`
// @510..542: arguments to this predicate call are incorrect`
// incorrect predicate argument
// @583..589: expected `int`, found `{int, int}`
// @559..593: arguments to this predicate call are incorrect`
// incorrect predicate argument
// @591..592: expected `b256`, found `int`
// @559..593: arguments to this predicate call are incorrect`
// >>>
