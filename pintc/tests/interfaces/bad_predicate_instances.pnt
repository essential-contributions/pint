predicate Foo() {
    constraint Bar[[]]();
}
predicate Baz() {
    constraint Bar[[]]();
}

predicate P() {
    constraint P[[]]();
}

predicate A(x: int) {
}

predicate B() {
    constraint A[[]](1, 2);
}

predicate W(x: int, y: b256) {}

predicate U() {
    constraint W[[]](1, 2, 3);
    constraint W[[]](0);
    constraint W[[]](false, {2, 1});
}

// parsed <<<
// predicate ::Foo(
// ) {
//     constraint ::Bar[[]]();
// }
// 
// predicate ::Baz(
// ) {
//     constraint ::Bar[[]]();
// }
// 
// predicate ::P(
// ) {
//     constraint ::P[[]]();
// }
// 
// predicate ::A(
//     ::x: int,
// ) {
// }
// 
// predicate ::B(
// ) {
//     constraint ::A[[]](1, 2);
// }
// 
// predicate ::W(
//     ::x: int,
//     ::y: b256,
// ) {
// }
// 
// predicate ::U(
// ) {
//     constraint ::W[[]](1, 2, 3);
//     constraint ::W[[]](0);
//     constraint ::W[[]](false, {2, 1});
// }
// >>>

// typecheck_failure <<<
// cannot find predicate `::Bar` in this contract
// @33..42: this predicate call references predicate `::Bar` which does not exist in this contract
// cannot find predicate `::Bar` in this contract
// @79..88: this predicate call references predicate `::Bar` which does not exist in this contract
// self referential predicate `::P`
// @124..131: this predicate call references the predicate it's declared in
// this predicate takes 1 argument but 2 arguments were supplied
// @192..203: unexpected number of arguments here
// incorrect predicate argument
// @281..282: expected `b256`, found `int`
// @272..286: arguments to this predicate call are incorrect`
// this predicate takes 2 arguments but 3 arguments were supplied
// @272..286: unexpected number of arguments here
// this predicate takes 2 arguments but 1 argument was supplied
// @303..311: unexpected number of arguments here
// incorrect predicate argument
// @334..339: expected `int`, found `bool`
// @328..348: arguments to this predicate call are incorrect`
// incorrect predicate argument
// @341..347: expected `b256`, found `{int, int}`
// @328..348: arguments to this predicate call are incorrect`
// >>>
