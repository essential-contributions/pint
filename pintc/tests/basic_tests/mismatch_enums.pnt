union Key = CMajor | DMinor;
union Chord = FFlatDiminished | EMinorOverG;

predicate test(saddest_sound: Chord) {
    // Saddest key is D-minor.  Should produce type error since `saddest_sound` is a `Chord`.
    constraint saddest_sound == Key::DMinor;
}

// parsed <<<
// union ::Key = CMajor | DMinor;
// union ::Chord = FFlatDiminished | EMinorOverG;
//
// predicate ::test(
//     ::saddest_sound: ::Chord,
// ) {
//     constraint (::saddest_sound == ::Key::DMinor);
// }
// >>>

// typecheck_failure <<<
// binary operator type error
// @240..251: operator `==` argument has unexpected type `::Key`
// @223..236: expecting type `::Chord`
// >>>
