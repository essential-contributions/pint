enum Key = CMajor | DMinor;
enum Chord = FFlatDiminished | EMinorOverG;

predicate test {
    var saddest_sound: Chord;

    // Saddest key is D-minor.  Should produce type error since `saddest_sound` is a `Chord`.
    constraint saddest_sound == Key::DMinor;
}

// parsed <<<
// enum ::Key = CMajor | DMinor;
// enum ::Chord = FFlatDiminished | EMinorOverG;
//
// predicate ::test {
//     var ::saddest_sound: ::Chord;
//     constraint (::saddest_sound == ::Key::DMinor);
// }
// >>>

// typecheck_failure <<<
// binary operator type error
// @247..258: operator `==` argument has unexpected type `::Key`
// @230..243: expecting type `::Chord`
// constraint expression type error
// @219..258: constraint expression has unknown type
// @219..258: expecting type `bool`
// >>>
