enum Key = CMajor | DMinor;
enum Chord = FFlatDiminished | EMinorOverG;

var saddest_sound: Chord;

// Saddest key is D-minor.  Should produce type error since `saddest_sound` is a `Chord`.
constraint saddest_sound == Key::DMinor;

solve satisfy;

// parsed <<<
// var ::saddest_sound: ::Chord;
// enum ::Key = CMajor | DMinor;
// enum ::Chord = FFlatDiminished | EMinorOverG;
// constraint (::saddest_sound == ::Key::DMinor);
// solve satisfy;
// >>>

// typecheck_failure <<<
// binary operator type error
// @218..229: operator `==` argument has unexpected type `::Key`
// @201..214: expecting type `::Chord`
// constraint expression type error
// @190..229: constraint expression has unknown type
// @190..229: expecting type `bool`
// >>>
