predicate test {
    var a = 1_100_000;
    var b = 1000;
    var c = 1_2_3_4_5;

    constraint a / b > c;
}

// parsed <<<
// predicate ::test {
//     var ::a;
//     var ::b;
//     var ::c;
//     constraint (::a == 1100000);
//     constraint (::b == 1000);
//     constraint (::c == 12345);
//     constraint ((::a / ::b) > ::c);
// }
// >>>

// flattened <<<
// predicate ::test {
//     var ::a: int;
//     var ::b: int;
//     var ::c: int;
//     constraint (::a == 1100000);
//     constraint (::b == 1000);
//     constraint (::c == 12345);
//     constraint ((::a / ::b) > ::c);
//     constraint __eq_set(__mut_keys(), {0});
// }
// >>>
