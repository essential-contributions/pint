var z: bool;
var x: int;
var y: int;
var xx: int;
var yy: int;

if true {
    if false {
    } else {
        constraint z && !z && 1;
    }

    constraint yy != xx;

    if z {
        constraint x + 1.0;
    } else {
        constraint z;
    }
} else {
    if z {
        constraint yy + xx == yy * xx;
        constraint z;
    } else {
        if z {
            constraint z && true;
            constraint yy + { 1, 2.0 };
        }
    }
}

solve satisfy;

// parsed <<<
// var ::z: bool;
// var ::x: int;
// var ::y: int;
// var ::xx: int;
// var ::yy: int;
// if true {
//     if false {
//     } else {
//         constraint ((::z && !::z) && 1)
//     }
//     constraint (::yy != ::xx)
//     if ::z {
//         constraint (::x + 1e0)
//     } else {
//         constraint ::z
//     }
// } else {
//     if ::z {
//         constraint ((::yy + ::xx) == (::yy * ::xx))
//         constraint ::z
//     } else {
//         if ::z {
//             constraint (::z && true)
//             constraint (::yy + {1, 2e0})
//         }
//     }
// }
// solve satisfy;
// >>> 

// typecheck_failure <<<
// binary operator type error
// @132..133: operator `&&` argument has unexpected type `int`
// @121..133: expecting type `bool`
// binary operator type error
// @202..205: operator `+` argument has unexpected type `real`
// @198..199: expecting type `int`
// binary operator type error
// @419..429: operator `+` argument has unexpected type `{int, real}`
// >>> 
