predicate test(
    h1: int,
    h2: int,
    h3: int,
    h4: int,
    h5: int,
    h6: int,
    h7: int,
    h8: int,
    h9: int,
    h10: int, 
    h11: int, 
    h12: int, 
    h13: int, 
    h14: int, 
    h15: int, 
    h16: int, 
    h17: int, 
    h18: int, 
) {
    constraint h1 in 3..5;
    constraint h2 in 3..5;
    constraint h3 in 3..5;
    constraint h4 in 3..5;
    constraint h5 in 3..5;
    constraint h6 in 3..5;
    constraint h7 in 3..5;
    constraint h8 in 3..5;
    constraint h9 in 3..5;
    constraint h10 in 3..5;
    constraint h11 in 3..5;
    constraint h12 in 3..5;
    constraint h13 in 3..5;
    constraint h14 in 3..5;
    constraint h15 in 3..5;
    constraint h16 in 3..5;
    constraint h17 in 3..5;
    constraint h18 in 3..5;

    constraint h1 + h2 + h3 + h4 + h5 + h6 + h7 + h8 + h9 + h10 + h11 + h12 + h13 + h14 + h15 + h16 + h17 + h18 == 72;
}

// parsed <<<
// predicate ::test(
//     ::h1: int,
//     ::h2: int,
//     ::h3: int,
//     ::h4: int,
//     ::h5: int,
//     ::h6: int,
//     ::h7: int,
//     ::h8: int,
//     ::h9: int,
//     ::h10: int,
//     ::h11: int,
//     ::h12: int,
//     ::h13: int,
//     ::h14: int,
//     ::h15: int,
//     ::h16: int,
//     ::h17: int,
//     ::h18: int,
// ) {
//     constraint ::h1 in 3..5;
//     constraint ::h2 in 3..5;
//     constraint ::h3 in 3..5;
//     constraint ::h4 in 3..5;
//     constraint ::h5 in 3..5;
//     constraint ::h6 in 3..5;
//     constraint ::h7 in 3..5;
//     constraint ::h8 in 3..5;
//     constraint ::h9 in 3..5;
//     constraint ::h10 in 3..5;
//     constraint ::h11 in 3..5;
//     constraint ::h12 in 3..5;
//     constraint ::h13 in 3..5;
//     constraint ::h14 in 3..5;
//     constraint ::h15 in 3..5;
//     constraint ::h16 in 3..5;
//     constraint ::h17 in 3..5;
//     constraint ::h18 in 3..5;
//     constraint ((((((((((((((((((::h1 + ::h2) + ::h3) + ::h4) + ::h5) + ::h6) + ::h7) + ::h8) + ::h9) + ::h10) + ::h11) + ::h12) + ::h13) + ::h14) + ::h15) + ::h16) + ::h17) + ::h18) == 72);
// }
// >>>

// flattened <<<
// predicate ::test(
//     ::h1: int,
//     ::h2: int,
//     ::h3: int,
//     ::h4: int,
//     ::h5: int,
//     ::h6: int,
//     ::h7: int,
//     ::h8: int,
//     ::h9: int,
//     ::h10: int,
//     ::h11: int,
//     ::h12: int,
//     ::h13: int,
//     ::h14: int,
//     ::h15: int,
//     ::h16: int,
//     ::h17: int,
//     ::h18: int,
// ) {
//     constraint ((::h1 >= 3) && (::h1 <= 5));
//     constraint ((::h2 >= 3) && (::h2 <= 5));
//     constraint ((::h3 >= 3) && (::h3 <= 5));
//     constraint ((::h4 >= 3) && (::h4 <= 5));
//     constraint ((::h5 >= 3) && (::h5 <= 5));
//     constraint ((::h6 >= 3) && (::h6 <= 5));
//     constraint ((::h7 >= 3) && (::h7 <= 5));
//     constraint ((::h8 >= 3) && (::h8 <= 5));
//     constraint ((::h9 >= 3) && (::h9 <= 5));
//     constraint ((::h10 >= 3) && (::h10 <= 5));
//     constraint ((::h11 >= 3) && (::h11 <= 5));
//     constraint ((::h12 >= 3) && (::h12 <= 5));
//     constraint ((::h13 >= 3) && (::h13 <= 5));
//     constraint ((::h14 >= 3) && (::h14 <= 5));
//     constraint ((::h15 >= 3) && (::h15 <= 5));
//     constraint ((::h16 >= 3) && (::h16 <= 5));
//     constraint ((::h17 >= 3) && (::h17 <= 5));
//     constraint ((::h18 >= 3) && (::h18 <= 5));
//     constraint ((((((((((((((((((::h1 + ::h2) + ::h3) + ::h4) + ::h5) + ::h6) + ::h7) + ::h8) + ::h9) + ::h10) + ::h11) + ::h12) + ::h13) + ::h14) + ::h15) + ::h16) + ::h17) + ::h18) == 72);
//     constraint __eq_set(__mut_keys(), {0});
// }
// >>>
