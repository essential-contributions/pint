predicate test {
    var x: int = nil;
    var y: int = 1 + nil;
    var z: int;
    constraint z < nil;
    constraint nil;
}

// parsed <<<
// predicate ::test {
//     var ::x: int;
//     var ::y: int;
//     var ::z: int;
//     constraint (::x == nil);
//     constraint (::y == (1 + nil));
//     constraint (::z < nil);
//     constraint nil;
// }
// >>>

// typecheck_failure <<<
// binary operator type error
// @25..26: unexpected argument for operator `==`
// only state variables and next state expressions can be compared to `nil`
// binary operator type error
// @60..63: operator `+` argument has unexpected type `nil`
// binary operator type error
// @100..103: operator `<` argument has unexpected type `nil`
// variable initialization type error
// @34..37: variable initializer has unexpected type `nil`
// @28..31: expecting type `int`
// constraint expression type error
// @109..123: constraint expression has unexpected type `nil`
// @120..123: expecting type `bool`
// >>>
