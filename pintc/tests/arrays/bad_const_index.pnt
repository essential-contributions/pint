let n: int;
let a: int[10];

constraint a[-1.2] == 3;

solve satisfy;

// intermediate <<<
// var ::n: int;
// var ::a: int[10];
// constraint (::a[-1.2e0] == 3);
// solve satisfy;
// >>>

// typecheck_failure <<<
// attempt to index an array with a mismatched value
// @42..46: array access must be with an int value
// found access using type `real`
// compiler internal error: missing expr key in expr_types slotmap when checking constraint expr types
// >>>
