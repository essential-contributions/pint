const g: int[2][2] = [ [11, 22], [33, 44]];

predicate test(b: int[4][2]) {
    constraint b[1][3] == 2;
    constraint g[1][2] == 55;
}

// parsed <<<
// const ::g: int[2][2] = [[11, 22], [33, 44]];
// 
// predicate ::test(
//     ::b: int[2][4],
// ) {
//     constraint (::b[1][3] == 2);
//     constraint (::g[1][2] == 55);
// }
// >>>

// flattening_failure <<<
// attempt to access array with out of bounds index
// @125..126: array index is out of bounds
// attempt to access array with out of bounds index
// @96..97: array index is out of bounds
// attempt to access array with out of bounds index
// @125..126: array index is out of bounds
// >>>
