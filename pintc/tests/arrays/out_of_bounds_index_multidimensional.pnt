predicate test(b: int[4][2]) {
    constraint b[5][1] == 2;
}

// parsed <<<
// predicate ::test(
//     ::b: int[2][4],
// ) {
//     constraint (::b[5][1] == 2);
// }
// >>>

// flattening_failure <<<
// attempt to access array with out of bounds index
// @48..49: array index is out of bounds
// >>>
