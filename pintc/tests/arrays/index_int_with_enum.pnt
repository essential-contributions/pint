enum Num = Zero | One | Two | Three;
var ary: int[4];

constraint ary[Num::One] == 1;

solve satisfy;

// parsed <<<
// var ::ary: int[4];
// enum ::Num = Zero | One | Two | Three;
// constraint (::ary[::Num::One] == 1);
// solve satisfy;
// >>>

// typecheck_failure <<<
// attempt to index an array with a mismatched value
// @70..78: array access must be with an int value
// found access using type `::Num`
// constraint expression type error
// @55..84: constraint expression has unknown type
// @55..84: expecting type `bool`
// >>>
