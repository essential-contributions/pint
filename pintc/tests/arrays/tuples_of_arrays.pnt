predicate test(
    a: {int, int[3], int},
    b: {bool, {bool, bool[2], bool}, bool[2]},
) {
    constraint a == {11, [22, 33, 44], 55};
    constraint b == {true, {false, [true, true], false}, [false, false]};
}

// parsed <<<
// predicate ::test(
//     ::a: {int, int[3], int},
//     ::b: {bool, {bool, bool[2], bool}, bool[2]},
// ) {
//     constraint (::a == {11, [22, 33, 44], 55});
//     constraint (::b == {true, {false, [true, true], false}, [false, false]});
// }
// >>>

// flattened <<<
// predicate ::test(
//     ::a: {int, int[3], int},
//     ::b: {bool, {bool, bool[2], bool}, bool[2]},
// ) {
//     constraint (::a == {11, [22, 33, 44], 55});
//     constraint (::b == {true, {false, [true, true], false}, [false, false]});
// }
// >>>
