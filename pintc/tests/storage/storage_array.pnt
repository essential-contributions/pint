storage {
    v: int[2][3],
    map_to_arrays: ( int => int[3] ),
}

interface Foo {
    storage {
        v: int[2][3],
        map_to_arrays: ( int => int[3] ),
    }
}

predicate Bar() {
    state addr = 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE;

    state v = storage::v;
    state v1 = storage::v[1];
    state v10 = storage::v[1][0];

    state map_to_arrays_69 = storage::map_to_arrays[69];
    state map_to_arrays_69_1 = storage::map_to_arrays[69][1];

    constraint v' == [
        [42, 43, 44],
        [52, 53, 54],
    ];
    constraint v[1]' == [52, 53, 54];
    constraint v[0][2]' == 44;

    constraint v1' == [52, 53, 54];
    constraint v1[2]' == 54;

    constraint v10' == 52;

    constraint map_to_arrays_69' == [99, 100, 101];
    constraint map_to_arrays_69[2]' == 101;
    constraint map_to_arrays_69_1' == 100;

    state foo_v = Foo[[addr]]::storage::v;
    state foo_v1 = Foo[[addr]]::storage::v[1];
    state foo_v10 = Foo[[addr]]::storage::v[1][0];

    state foo_map_to_arrays_69 = Foo[[addr]]::storage::map_to_arrays[69];
    state foo_map_to_arrays_69_1 = Foo[[addr]]::storage::map_to_arrays[69][1];

    constraint foo_v' == [
        [142, 143, 144],
        [152, 153, 154],
    ];
    constraint foo_v[1]' == [152, 153, 154];
    constraint foo_v[0][2]' == 144;

    constraint foo_v1' == [152, 153, 154];
    constraint foo_v1[2]' == 154;

    constraint foo_v10' == 152;

    constraint foo_map_to_arrays_69' == [199, 1100, 1101];
    constraint foo_map_to_arrays_69[2]' == 1101;
    constraint foo_map_to_arrays_69_1' == 1100;
}

// parsed <<<
// storage {
//     v: int[3][2],
//     map_to_arrays: ( int => int[3] ),
// }
// interface ::Foo {
//     storage {
//         v: int[3][2],
//         map_to_arrays: ( int => int[3] ),
//     }
// }
// 
// predicate ::Bar(
// ) {
//     state ::addr = 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE;
//     state ::v = storage::v;
//     state ::v1 = storage::v[1];
//     state ::v10 = storage::v[1][0];
//     state ::map_to_arrays_69 = storage::map_to_arrays[69];
//     state ::map_to_arrays_69_1 = storage::map_to_arrays[69][1];
//     state ::foo_v = ::Foo[[::addr]]::storage::v;
//     state ::foo_v1 = ::Foo[[::addr]]::storage::v[1];
//     state ::foo_v10 = ::Foo[[::addr]]::storage::v[1][0];
//     state ::foo_map_to_arrays_69 = ::Foo[[::addr]]::storage::map_to_arrays[69];
//     state ::foo_map_to_arrays_69_1 = ::Foo[[::addr]]::storage::map_to_arrays[69][1];
//     constraint (::v' == [[42, 43, 44], [52, 53, 54]]);
//     constraint (::v[1]' == [52, 53, 54]);
//     constraint (::v[0][2]' == 44);
//     constraint (::v1' == [52, 53, 54]);
//     constraint (::v1[2]' == 54);
//     constraint (::v10' == 52);
//     constraint (::map_to_arrays_69' == [99, 100, 101]);
//     constraint (::map_to_arrays_69[2]' == 101);
//     constraint (::map_to_arrays_69_1' == 100);
//     constraint (::foo_v' == [[142, 143, 144], [152, 153, 154]]);
//     constraint (::foo_v[1]' == [152, 153, 154]);
//     constraint (::foo_v[0][2]' == 144);
//     constraint (::foo_v1' == [152, 153, 154]);
//     constraint (::foo_v1[2]' == 154);
//     constraint (::foo_v10' == 152);
//     constraint (::foo_map_to_arrays_69' == [199, 1100, 1101]);
//     constraint (::foo_map_to_arrays_69[2]' == 1101);
//     constraint (::foo_map_to_arrays_69_1' == 1100);
// }
// >>>

// flattened <<<
// storage {
//     v: int[3][2],
//     map_to_arrays: ( int => int[3] ),
// }
// interface ::Foo {
//     storage {
//         v: int[3][2],
//         map_to_arrays: ( int => int[3] ),
//     }
// }
// 
// predicate ::Bar(
// ) {
//     state ::addr: b256 = 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE;
//     state ::v: int[3][2] = __storage_get({0, 0});
//     state ::v1: int[3] = __storage_get({0, (0 + (1 * 3))});
//     state ::v10: int = __storage_get({0, ((0 + (1 * 3)) + (0 * 1))});
//     state ::map_to_arrays_69: int[3] = __storage_get({1, 69, 0});
//     state ::map_to_arrays_69_1: int = __storage_get({1, 69, (0 + (1 * 1))});
//     state ::foo_v: int[3][2] = __storage_get_extern(::addr, {0, 0});
//     state ::foo_v1: int[3] = __storage_get_extern(::addr, {0, (0 + (1 * 3))});
//     state ::foo_v10: int = __storage_get_extern(::addr, {0, ((0 + (1 * 3)) + (0 * 1))});
//     state ::foo_map_to_arrays_69: int[3] = __storage_get_extern(::addr, {1, 69, 0});
//     state ::foo_map_to_arrays_69_1: int = __storage_get_extern(::addr, {1, 69, (0 + (1 * 1))});
//     constraint (::v' == [[42, 43, 44], [52, 53, 54]]);
//     constraint (::v'[1] == [52, 53, 54]);
//     constraint (::v'[0][2] == 44);
//     constraint (::v1' == [52, 53, 54]);
//     constraint (::v1'[2] == 54);
//     constraint (::v10' == 52);
//     constraint (::map_to_arrays_69' == [99, 100, 101]);
//     constraint (::map_to_arrays_69'[2] == 101);
//     constraint (::map_to_arrays_69_1' == 100);
//     constraint (::foo_v' == [[142, 143, 144], [152, 153, 154]]);
//     constraint (::foo_v'[1] == [152, 153, 154]);
//     constraint (::foo_v'[0][2] == 144);
//     constraint (::foo_v1' == [152, 153, 154]);
//     constraint (::foo_v1'[2] == 154);
//     constraint (::foo_v10' == 152);
//     constraint (::foo_map_to_arrays_69' == [199, 1100, 1101]);
//     constraint (::foo_map_to_arrays_69'[2] == 1101);
//     constraint (::foo_map_to_arrays_69_1' == 1100);
//     constraint __eq_set(__mut_keys(), {0});
// }
// >>>
