type MyMap = (int => int);
type MyInt = int;
type MyNestMap = (MyInt => int);

storage {
    m: MyMap,
    n: MyInt,
    o: MyNestMap,
}

// parsed <<<
// type ::MyMap = ( int => int );
// type ::MyInt = int;
// type ::MyNestMap = ( ::MyInt => int );
// storage {
//     m: ::MyMap,
//     n: ::MyInt,
//     o: ::MyNestMap,
// }
// >>>

// flattened <<<
// type ::MyMap = ( int => int );
// type ::MyInt = int;
// type ::MyNestMap = ( ::MyInt (int) => int );
// storage {
//     m: ( int => int ),
//     n: int,
//     o: ( int => int ),
// }
// >>>
