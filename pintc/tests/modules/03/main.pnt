use a::a;

// All these statements have a name clash with the `a::a` above.
use a::a;

predicate test() {
    let a = 12;
    let a = 13;
}

// parse_failure <<<
// symbol `a` has already been declared
// @7..8: previous declaration of the symbol `a` here
// @83..84: `a` redeclared here
// `a` must be declared or imported only once in this scope
// symbol `a` has already been declared
// @110..120: previous declaration of the symbol `a` here
// @130..131: `a` redeclared here
// `a` must be declared or imported only once in this scope
// symbol `::a` has already been declared
// @7..8: previous declaration of the symbol `::a` here
// @110..120: `::a` redeclared here
// `::a` must be declared or imported only once in this scope
// >>>
