use a_mod::a1 as a1_alias;
use a_mod::a2 as a1_alias; // Clash because of the alias

var a1_alias = 5; // Clash because of the alias
var a1 = 5; // No Clash

var c_copy = b_mod::c;

// parse_failure <<<
// symbol `a1_alias` has already been declared
// @11..25: previous declaration of the symbol `a1_alias` here
// @38..52: `a1_alias` redeclared here
// `a1_alias` must be declared or imported only once in this scope
// symbol `a1_alias` has already been declared
// @11..25: previous declaration of the symbol `a1_alias` here
// @89..97: `a1_alias` redeclared here
// `a1_alias` must be declared or imported only once in this scope
// symbol `c1_alias` has already been declared
// @12..26: previous declaration of the symbol `c1_alias` here
// @28..42: `c1_alias` redeclared here
// `c1_alias` must be declared or imported only once in this scope
// symbol `c1_alias` has already been declared
// @12..26: previous declaration of the symbol `c1_alias` here
// @80..88: `c1_alias` redeclared here
// `c1_alias` must be declared or imported only once in this scope
// >>>
