macro @m($a, $b) {
    constraint z == $a + $b;
}

macro @m($x, $y) {
    constraint a == $x + $y;
}

predicate test(z: int, a: int) {
    @m(1; 2);
}

// parse_failure <<<
// macro ::@m is declared multiple times
// @6..16: previous declaration of the macro `::@m` here
// @57..67: `::@m` redeclared here with the same number of parameters
// it is valid to have multiple macros named `::@m` but they must have differing parameter lists
// >>>
