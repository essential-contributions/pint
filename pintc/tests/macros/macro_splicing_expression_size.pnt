macro @sum($x, &rest) {
    @sum($x + &rest)
}

macro @sum($x) {
    $x
}

var ary: int[10 + 1];

var a = @sum(~ary);

solve satisfy;

// parse_failure <<<
// unable to determine spliced array size
// @111..115: unable to determine spliced array size for `::ary` while parsing
// macro array splicing is currently limited to immediate integer sizes or enums
// expected `!`, `(`, `+`, `-`, `::`, `[`, `a boolean`, `a literal`, `an identifier`, `cond`, `constraint`, `enum`, `exists`, `forall`, `if`, `intent`, `interface`, `macro_name`, `pub`, `solve`, `state`, `type`, `use`, `var`, `{`, or `}`, found `~ary`
// @111..115: expected `!`, `(`, `+`, `-`, `::`, `[`, `a boolean`, `a literal`, `an identifier`, `cond`, `constraint`, `enum`, `exists`, `forall`, `if`, `intent`, `interface`, `macro_name`, `pub`, `solve`, `state`, `type`, `use`, `var`, `{`, or `}`
// @106..116: when making macro call to '::@sum'
// >>>
