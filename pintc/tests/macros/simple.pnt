macro @a_macro($a, $0, $type) {
    constraint $a == $0;
    constraint b > $a;
    b
}

predicate test(id: int, b: int) {
    constraint @a_macro(id; 1234; int) > 1;
}

// parsed <<<
// predicate ::test(
//     ::id: int,
//     ::b: int,
// ) {
//     constraint (::b > 1);
//     constraint (::id == 1234);
//     constraint (::b > ::id);
// }
// >>>

// flattened <<<
// predicate ::test(
//     ::id: int,
//     ::b: int,
// ) {
//     constraint (::b > 1);
//     constraint (::id == 1234);
//     constraint (::b > ::id);
// }
// >>>
