macro @a_macro($a, $0, $type) {
    var $a: $type = $0;
    var b: $type;
    constraint b > $a;
    b
}

predicate test {
    constraint @a_macro(id; 1234; int) > 1;
}

// parsed <<<
// predicate ::test {
//     var ::id: int;
//     var ::anon@0::b: int;
//     constraint (::anon@0::b > 1);
//     constraint (::id == 1234);
//     constraint (::anon@0::b > ::id);
// }
// >>>

// flattened <<<
// predicate ::test {
//     var ::id: int;
//     var ::anon@0::b: int;
//     constraint (::anon@0::b > 1);
//     constraint (::id == 1234);
//     constraint (::anon@0::b > ::id);
//     constraint __eq_set(__mut_keys(), {0});
// }
// >>>
