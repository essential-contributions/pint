macro @a($x) {
    constraint z == @b($x);
}

macro @b($x) {
    constraint z == @c($x);
}

macro @c($x) {
    constraint z == @a($x);
}

predicate test() {
    @a(11);
}

// parse_failure <<<
// macro call is recursive
// @127..133: macro `::@a` is recursively called
// @6..12: macro `::@a` declared here
// a macro called recursively with the same number of arguments will cause a non-terminating loop during expansion
// >>>
