predicate test(ary: int[10], vector: int[]) {
    constraint ary != [];
}

// parsed <<<
// predicate ::test(
//     ::ary: int[10],
//     ::vector: int[],
// ) {
//     constraint (::ary != []);
// }
// >>>

// typecheck_failure <<<
// illegal empty array value
// @68..70: empty array values are illegal
// binary operator type error
// @68..70: operator `!=` argument has unexpected type `Error[0]`
// @61..64: expecting type `int[10]`
// variables cannot have storage types
// @29..35: found variable of storage type int[] here
// >>>
