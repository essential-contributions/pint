predicate test {
    var ary: int[10];

    constraint ary != [];

    var vector: int[];
}

// parsed <<<
// predicate ::test {
//     var ::ary: int[10];
//     var ::vector: int[];
//     constraint (::ary != []);
// }
// >>>

// typecheck_failure <<<
// illegal empty array value
// @62..64: empty array values are illegal
// binary operator type error
// @62..64: operator `!=` argument has unexpected type `Error[0]`
// @55..58: expecting type `int[10]`
// variables cannot have storage types
// @75..81: found variable of storage type int[] here
// >>>
