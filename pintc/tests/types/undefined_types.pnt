enum Baz = X | Y;
type Xyzzy = int;

predicate test {
    var a: int;
    var b: Foo;
    var c = a as Bar;

    var d: Baz;
    var e = a as Xyzzy;
}

// parsed <<<
// enum ::Baz = X | Y;
// type ::Xyzzy = int;
//
// predicate ::test {
//     var ::a: int;
//     var ::b: ::Foo;
//     var ::c;
//     var ::d: ::Baz;
//     var ::e;
//     constraint (::c == ::a as ::Bar);
//     constraint (::e == ::a as ::Xyzzy);
// }
// >>>

// typecheck_failure <<<
// undefined type
// @81..84: type is undefined
// undefined type
// @103..106: type is undefined
// >>>
