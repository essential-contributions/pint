type Ambiguous = NonExistentEnum;

var a = Ambiguous::MissingVariant;

solve satisfy;

// parsed <<<
// var ::a;
// type ::Ambiguous = ::NonExistentEnum;
// constraint (::a == ::Ambiguous::MissingVariant);
// solve satisfy;
// >>>

// typecheck_failure <<<
// cannot find value `::Ambiguous::MissingVariant` in this scope
// @43..68: not found in this scope
// cannot find value `::Ambiguous::MissingVariant` in this scope
// @43..68: not found in this scope
// unable to determine expression type
// @39..40: type of this expression is ambiguous
// constraint expression type error
// @35..68: constraint expression has unknown type
// @35..68: expecting type `bool`
// >>>
