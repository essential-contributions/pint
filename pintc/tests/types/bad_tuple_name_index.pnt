let a = { x: 11, y: 22.2 };

constraint a.z > 33;

solve satisfy;

// intermediate <<<
// var ::a;
// constraint (::a == {x: 11, y: 2.22e1});
// constraint (::a.z > 33);
// solve satisfy;
// >>>

// typecheck_failure <<<
// invalid tuple accessor
// @40..43: unable to get field from tuple using `z`
// tuple has type `{x: int, y: real}`
// compiler internal error: missing expr key in expr_types slotmap when checking constraint expr types
// >>>
