predicate test(a: {int, int, int}) {
    constraint a == { 11, 22, 33 };

    constraint a.4 == 44;
}

// parsed <<<
// predicate ::test(
//     ::a: {int, int, int},
// ) {
//     constraint (::a == {11, 22, 33});
//     constraint (::a.4 == 44);
// }
// >>>

// typecheck_failure <<<
// invalid tuple accessor
// @89..92: unable to get field from tuple using `4`
// tuple has type `{int, int, int}`
// >>>
