union x = a | b;

const y: { x, x } = { x::a, x::b };

predicate test() {
}

// parsed <<<
// const ::y: {::x, ::x} = {::x::a, ::x::b};
// union ::x = a | b;
//
// predicate ::test(
// ) {
// }
// >>>

// flattened <<<
// const ::y: {::x, ::x} = {::x::a, ::x::b};
// union ::x = a | b;
//
// predicate ::test(
// ) {
//     constraint __eq_set(__mut_keys(), {0});
// }
// >>>
