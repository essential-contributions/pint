let a = b + c;
let b = c + a;
let c = a - b;

solve satisfy;

// intermediate <<<
// var ::a;
// var ::b;
// var ::c;
// constraint (::a == (::b + ::c));
// constraint (::b == (::c + ::a));
// constraint (::c == (::a - ::b));
// solve satisfy;
// >>>

// typecheck_failure <<<
// expression has a recursive dependency
// @38..39: cannot determine type of expression due to dependency
// @8..13: dependency on expression is recursive
// expression has a recursive dependency
// @8..9: cannot determine type of expression due to dependency
// @23..28: dependency on expression is recursive
// expression has a recursive dependency
// @23..24: cannot determine type of expression due to dependency
// @38..43: dependency on expression is recursive
// unable to determine expression type
// @4..5: type of this expression is ambiguous
// unable to determine expression type
// @19..20: type of this expression is ambiguous
// unable to determine expression type
// @34..35: type of this expression is ambiguous
// >>>
