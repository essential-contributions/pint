predicate test() {
    let a = b + c;
    let b = c + a;
    let c = a - b;
}

// parsed <<<
// predicate ::test(
// ) {
//     let ::a = (::b + ::c);
//     let ::b = (::c + ::a);
//     let ::c = (::a - ::b);
// }
// >>>

// typecheck_failure <<<
// expression has a recursive dependency
// @69..70: cannot determine type of expression due to dependency
// @31..36: dependency on expression is recursive
// expression has a recursive dependency
// @31..32: cannot determine type of expression due to dependency
// @50..55: dependency on expression is recursive
// expression has a recursive dependency
// @50..51: cannot determine type of expression due to dependency
// @69..74: dependency on expression is recursive
// unable to determine expression type
// @23..36: type of this expression is ambiguous
// unable to determine expression type
// @42..55: type of this expression is ambiguous
// unable to determine expression type
// @61..74: type of this expression is ambiguous
// >>>
