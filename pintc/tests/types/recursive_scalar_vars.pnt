predicate test {
    var a = b + c;
    var b = c + a;
    var c = a - b;
}

// parsed <<<
// predicate ::test {
//     var ::a;
//     var ::b;
//     var ::c;
//     constraint (::a == (::b + ::c));
//     constraint (::b == (::c + ::a));
//     constraint (::c == (::a - ::b));
// }
// >>>

// typecheck_failure <<<
// expression has a recursive dependency
// @67..68: cannot determine type of expression due to dependency
// @29..34: dependency on expression is recursive
// expression has a recursive dependency
// @29..30: cannot determine type of expression due to dependency
// @48..53: dependency on expression is recursive
// expression has a recursive dependency
// @48..49: cannot determine type of expression due to dependency
// @67..72: dependency on expression is recursive
// expression has a recursive dependency
// @67..68: cannot determine type of expression due to dependency
// @29..34: dependency on expression is recursive
// expression has a recursive dependency
// @29..30: cannot determine type of expression due to dependency
// @48..53: dependency on expression is recursive
// expression has a recursive dependency
// @48..49: cannot determine type of expression due to dependency
// @67..72: dependency on expression is recursive
// unable to determine expression type
// @25..26: type of this expression is ambiguous
// unable to determine expression type
// @44..45: type of this expression is ambiguous
// unable to determine expression type
// @63..64: type of this expression is ambiguous
// constraint expression type error
// @21..34: constraint expression has unknown type
// @21..34: expecting type `bool`
// constraint expression type error
// @40..53: constraint expression has unknown type
// @40..53: expecting type `bool`
// constraint expression type error
// @59..72: constraint expression has unknown type
// @59..72: expecting type `bool`
// >>>
