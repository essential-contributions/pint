type I = int;

predicate test(i: I, j: I) {
    constraint i == 11;
    constraint j == true;
}

// parsed <<<
// type ::I = int;
// 
// predicate ::test(
//     ::i: ::I,
//     ::j: ::I,
// ) {
//     constraint (::i == 11);
//     constraint (::j == true);
// }
// >>>

// typecheck_failure <<<
// binary operator type error
// @88..92: operator `==` argument has unexpected type `bool`
// @83..84: expecting type `::I (int)`
// >>>
