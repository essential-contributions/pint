var a: int = true ? 11 : 22.2;

solve satisfy;

// intermediate <<<
// var ::a: int;
// constraint (::a == (true ? 11 : 2.22e1));
// solve satisfy;
// >>>

// typecheck_failure <<<
// branches of a select expression must have the same type
// @20..22: 'then' branch has the type `int`
// @25..29: 'else' branch has the type `real`
// branches of a select expression must have the same type
// @20..22: 'then' branch has the type `int`
// @25..29: 'else' branch has the type `real`
// variable initialization type error
// @13..29: variable initializer has unknown type
// @7..10: expecting type `int`
// constraint expression type error
// @0..29: constraint expression has unknown type
// @0..29: expecting type `bool`
// >>>
