predicate test(a: int) {
    constraint a == (true ? 11 : 0x0000000000000000000000000000000000000000000000000000000000000000);
}

// parsed <<<
// predicate ::test(
//     ::a: int,
// ) {
//     constraint (::a == (true ? 11 : 0x0000000000000000000000000000000000000000000000000000000000000000));
// }
// >>>

// typecheck_failure <<<
// branches of a select expression must have the same type
// @53..55: 'then' branch has the type `int`
// @58..124: 'else' branch has the type `b256`
// >>>
