predicate test() {
    let a = [c[1], b];
    let b = c[1];
    let c = [[b][0], a[1]];
}

// parsed <<<
// predicate ::test(
// ) {
//     let ::a = [::c[1], ::b];
//     let ::b = ::c[1];
//     let ::c = [[::b][0], ::a[1]];
// }
// >>>

// typecheck_failure <<<
// expression has a recursive dependency
// @54..55: cannot determine type of expression due to dependency
// @72..86: dependency on expression is recursive
// expression has a recursive dependency
// @74..75: cannot determine type of expression due to dependency
// @54..58: dependency on expression is recursive
// unable to determine expression type
// @23..40: type of this expression is ambiguous
// unable to determine expression type
// @46..58: type of this expression is ambiguous
// unable to determine expression type
// @64..86: type of this expression is ambiguous
// >>>
