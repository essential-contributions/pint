predicate test {
    var a = -true;
    var b = -{1,2};

    var c = !11;
    var d = !0x0000111100001111000011110000111100001111000011110000111100001111;
}

// parsed <<<
// predicate ::test {
//     var ::a;
//     var ::b;
//     var ::c;
//     var ::d;
//     constraint (::a == -true);
//     constraint (::b == -{1, 2});
//     constraint (::c == !11);
//     constraint (::d == !0x0000111100001111000011110000111100001111000011110000111100001111);
// }
// >>>

// typecheck_failure <<<
// unary operator type error
// @29..34: operator `-` argument has unexpected type `bool`
// unary operator type error
// @48..54: operator `-` argument has unexpected type `{int, int}`
// unary operator type error
// @69..72: operator `!` argument has unexpected type `int`
// unary operator type error
// @86..153: operator `!` argument has unexpected type `b256`
// >>>
