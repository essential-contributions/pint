predicate test {
    var a = -true;
    var b = -{1,2};

    var c = !11;
    var d = !"sure";
}

// parsed <<<
// predicate ::test {
//     var ::a;
//     var ::b;
//     var ::c;
//     var ::d;
//     constraint (::a == -true);
//     constraint (::b == -{1, 2});
//     constraint (::c == !11);
//     constraint (::d == !"sure");
// }
// >>>

// typecheck_failure <<<
// unary operator type error
// @29..34: operator `-` argument has unexpected type `bool`
// unary operator type error
// @48..54: operator `-` argument has unexpected type `{int, int}`
// unary operator type error
// @69..72: operator `!` argument has unexpected type `int`
// unary operator type error
// @86..93: operator `!` argument has unexpected type `string`
// unary operator type error
// @29..34: operator `-` argument has unexpected type `bool`
// unary operator type error
// @48..54: operator `-` argument has unexpected type `{int, int}`
// unary operator type error
// @69..72: operator `!` argument has unexpected type `int`
// unary operator type error
// @86..93: operator `!` argument has unexpected type `string`
// unable to determine expression type
// @25..26: type of this expression is ambiguous
// unable to determine expression type
// @44..45: type of this expression is ambiguous
// unable to determine expression type
// @65..66: type of this expression is ambiguous
// unable to determine expression type
// @82..83: type of this expression is ambiguous
// constraint expression type error
// @21..34: constraint expression has unknown type
// @21..34: expecting type `bool`
// constraint expression type error
// @40..54: constraint expression has unknown type
// @40..54: expecting type `bool`
// constraint expression type error
// @61..72: constraint expression has unknown type
// @61..72: expecting type `bool`
// constraint expression type error
// @78..93: constraint expression has unknown type
// @78..93: expecting type `bool`
// >>>
