let a: int = if true { 11 } else { 22.2 };

solve satisfy;

// intermediate <<<
// var ::a: int;
// constraint (::a == if true { 11 } else { 2.22e1 });
// solve satisfy;
// >>>

// typecheck_failure <<<
// branches in if-expression must have the same type
// @23..25: 'then' branch has the type `int`
// @35..39: 'else' branch has the type `real`
// compiler internal error: missing expr key in expr_types slotmap when checking constraint expr types
// >>>
