predicate test {
    var a = 11 + false;
    var b = 22 - true;
    var c = [1,2] * 33;
    var d = "four" / 44;

    enum T = FortyTwo | FleventyFive;
    var e = 55 % T::FortyTwo;

    // Numerics are allowed, but they must match.
    var f = 66 + 77.7;
    var g = 88 - 99.9;
    var h = 10.10 * 11;
    var i = 12 / 13.13;
    var j = 14.14 % 15;

    // `==` and `!=` take any type but they must be equivalent.
    var k = 16 == T::FleventyFive;
    var l = 17 != true;

    var m = true > false;
    var n = 18 >= 19.19;
    var o = 20 < "21";
    var p = 22 <= [23, 23];

    var q = true && 24;
    var r = 25.25 || false;

    // Tuples can compare with `==` or `!=` too.
    var s = {true, 26} == {27, false};
    var t = {28.28, 29} != {30, 31};
}

// parsed <<<
// predicate ::test {
//     var ::a;
//     var ::b;
//     var ::c;
//     var ::d;
//     var ::e;
//     var ::f;
//     var ::g;
//     var ::h;
//     var ::i;
//     var ::j;
//     var ::k;
//     var ::l;
//     var ::m;
//     var ::n;
//     var ::o;
//     var ::p;
//     var ::q;
//     var ::r;
//     var ::s;
//     var ::t;
//     enum ::T = FortyTwo | FleventyFive;
//     constraint (::a == (11 + false));
//     constraint (::b == (22 - true));
//     constraint (::c == ([1, 2] * 33));
//     constraint (::d == ("four" / 44));
//     constraint (::e == (55 % ::T::FortyTwo));
//     constraint (::f == (66 + 7.77e1));
//     constraint (::g == (88 - 9.99e1));
//     constraint (::h == (1.01e1 * 11));
//     constraint (::i == (12 / 1.313e1));
//     constraint (::j == (1.414e1 % 15));
//     constraint (::k == (16 == ::T::FleventyFive));
//     constraint (::l == (17 != true));
//     constraint (::m == (true > false));
//     constraint (::n == (18 >= 1.919e1));
//     constraint (::o == (20 < "21"));
//     constraint (::p == (22 <= [23, 23]));
//     constraint (::q == (true && 24));
//     constraint (::r == (2.525e1 || false));
//     constraint (::s == ({true, 26} == {27, false}));
//     constraint (::t == ({2.828e1, 29} != {30, 31}));
// }
// >>>

// typecheck_failure <<<
// binary operator type error
// @34..39: operator `+` argument has unexpected type `bool`
// binary operator type error
// @58..62: operator `-` argument has unexpected type `bool`
// binary operator type error
// @76..81: operator `*` argument has unexpected type `int[2]`
// binary operator type error
// @100..106: operator `/` argument has unexpected type `string`
// binary operator type error
// @169..180: operator `%` argument has unexpected type `::T`
// binary operator type error
// @250..254: operator `+` argument has unexpected type `real`
// @245..247: expecting type `int`
// binary operator type error
// @273..277: operator `-` argument has unexpected type `real`
// @268..270: expecting type `int`
// binary operator type error
// @299..301: operator `*` argument has unexpected type `int`
// @291..296: expecting type `real`
// binary operator type error
// @320..325: operator `/` argument has unexpected type `real`
// @315..317: expecting type `int`
// binary operator type error
// @347..349: operator `%` argument has unexpected type `int`
// @339..344: expecting type `real`
// binary operator type error
// @434..449: operator `==` argument has unexpected type `::T`
// @428..430: expecting type `int`
// binary operator type error
// @469..473: operator `!=` argument has unexpected type `bool`
// @463..465: expecting type `int`
// binary operator type error
// @488..492: operator `>` argument has unexpected type `bool`
// binary operator type error
// @520..525: operator `>=` argument has unexpected type `real`
// @514..516: expecting type `int`
// binary operator type error
// @544..548: operator `<` argument has unexpected type `string`
// binary operator type error
// @568..576: operator `<=` argument has unexpected type `int[2]`
// binary operator type error
// @599..601: operator `&&` argument has unexpected type `int`
// @591..601: expecting type `bool`
// binary operator type error
// @615..620: operator `||` argument has unexpected type `real`
// @615..629: expecting type `bool`
// binary operator type error
// @707..718: operator `==` argument has unexpected type `{int, bool}`
// @693..703: expecting type `{bool, int}`
// binary operator type error
// @747..755: operator `!=` argument has unexpected type `{int, int}`
// @732..743: expecting type `{real, int}`
// binary operator type error
// @34..39: operator `+` argument has unexpected type `bool`
// binary operator type error
// @58..62: operator `-` argument has unexpected type `bool`
// binary operator type error
// @76..81: operator `*` argument has unexpected type `int[2]`
// binary operator type error
// @100..106: operator `/` argument has unexpected type `string`
// binary operator type error
// @169..180: operator `%` argument has unexpected type `::T`
// binary operator type error
// @250..254: operator `+` argument has unexpected type `real`
// @245..247: expecting type `int`
// binary operator type error
// @273..277: operator `-` argument has unexpected type `real`
// @268..270: expecting type `int`
// binary operator type error
// @299..301: operator `*` argument has unexpected type `int`
// @291..296: expecting type `real`
// binary operator type error
// @320..325: operator `/` argument has unexpected type `real`
// @315..317: expecting type `int`
// binary operator type error
// @347..349: operator `%` argument has unexpected type `int`
// @339..344: expecting type `real`
// binary operator type error
// @434..449: operator `==` argument has unexpected type `::T`
// @428..430: expecting type `int`
// binary operator type error
// @469..473: operator `!=` argument has unexpected type `bool`
// @463..465: expecting type `int`
// binary operator type error
// @488..492: operator `>` argument has unexpected type `bool`
// binary operator type error
// @520..525: operator `>=` argument has unexpected type `real`
// @514..516: expecting type `int`
// binary operator type error
// @544..548: operator `<` argument has unexpected type `string`
// binary operator type error
// @568..576: operator `<=` argument has unexpected type `int[2]`
// binary operator type error
// @599..601: operator `&&` argument has unexpected type `int`
// @591..601: expecting type `bool`
// binary operator type error
// @615..620: operator `||` argument has unexpected type `real`
// @615..629: expecting type `bool`
// binary operator type error
// @707..718: operator `==` argument has unexpected type `{int, bool}`
// @693..703: expecting type `{bool, int}`
// binary operator type error
// @747..755: operator `!=` argument has unexpected type `{int, int}`
// @732..743: expecting type `{real, int}`
// unable to determine expression type
// @25..26: type of this expression is ambiguous
// unable to determine expression type
// @49..50: type of this expression is ambiguous
// unable to determine expression type
// @72..73: type of this expression is ambiguous
// unable to determine expression type
// @96..97: type of this expression is ambiguous
// unable to determine expression type
// @160..161: type of this expression is ambiguous
// unable to determine expression type
// @241..242: type of this expression is ambiguous
// unable to determine expression type
// @264..265: type of this expression is ambiguous
// unable to determine expression type
// @287..288: type of this expression is ambiguous
// unable to determine expression type
// @311..312: type of this expression is ambiguous
// unable to determine expression type
// @335..336: type of this expression is ambiguous
// unable to determine expression type
// @424..425: type of this expression is ambiguous
// unable to determine expression type
// @459..460: type of this expression is ambiguous
// unable to determine expression type
// @484..485: type of this expression is ambiguous
// unable to determine expression type
// @510..511: type of this expression is ambiguous
// unable to determine expression type
// @535..536: type of this expression is ambiguous
// unable to determine expression type
// @558..559: type of this expression is ambiguous
// unable to determine expression type
// @587..588: type of this expression is ambiguous
// unable to determine expression type
// @611..612: type of this expression is ambiguous
// unable to determine expression type
// @689..690: type of this expression is ambiguous
// unable to determine expression type
// @728..729: type of this expression is ambiguous
// constraint expression type error
// @21..39: constraint expression has unknown type
// @21..39: expecting type `bool`
// constraint expression type error
// @45..62: constraint expression has unknown type
// @45..62: expecting type `bool`
// constraint expression type error
// @68..86: constraint expression has unknown type
// @68..86: expecting type `bool`
// constraint expression type error
// @92..111: constraint expression has unknown type
// @92..111: expecting type `bool`
// constraint expression type error
// @156..180: constraint expression has unknown type
// @156..180: expecting type `bool`
// constraint expression type error
// @237..254: constraint expression has unknown type
// @237..254: expecting type `bool`
// constraint expression type error
// @260..277: constraint expression has unknown type
// @260..277: expecting type `bool`
// constraint expression type error
// @283..301: constraint expression has unknown type
// @283..301: expecting type `bool`
// constraint expression type error
// @307..325: constraint expression has unknown type
// @307..325: expecting type `bool`
// constraint expression type error
// @331..349: constraint expression has unknown type
// @331..349: expecting type `bool`
// constraint expression type error
// @420..449: constraint expression has unknown type
// @420..449: expecting type `bool`
// constraint expression type error
// @455..473: constraint expression has unknown type
// @455..473: expecting type `bool`
// constraint expression type error
// @480..500: constraint expression has unknown type
// @480..500: expecting type `bool`
// constraint expression type error
// @506..525: constraint expression has unknown type
// @506..525: expecting type `bool`
// constraint expression type error
// @531..548: constraint expression has unknown type
// @531..548: expecting type `bool`
// constraint expression type error
// @554..576: constraint expression has unknown type
// @554..576: expecting type `bool`
// constraint expression type error
// @583..601: constraint expression has unknown type
// @583..601: expecting type `bool`
// constraint expression type error
// @607..629: constraint expression has unknown type
// @607..629: expecting type `bool`
// constraint expression type error
// @685..718: constraint expression has unknown type
// @685..718: expecting type `bool`
// constraint expression type error
// @724..755: constraint expression has unknown type
// @724..755: expecting type `bool`
// >>>
