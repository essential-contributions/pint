storage {
    i: int,
    b: bool,
    map1: (int => int),
    map2: (b256 => bool),
}

predicate test() {
    state x = 5;
    state address = 0x2222222222222222222222222222222222222222222222222222222222222222;

    state i1: bool = storage::i;

    state b1: int = storage::b;

    state map_1_access: bool = storage::map1[x];

    state map_2_access: int = storage::map2[address];
}

// parsed <<<
// storage {
//     i: int,
//     b: bool,
//     map1: ( int => int ),
//     map2: ( b256 => bool ),
// }
// 
// predicate ::test(
// ) {
//     state ::x = 5;
//     state ::address = 0x2222222222222222222222222222222222222222222222222222222222222222;
//     state ::i1: bool = storage::i;
//     state ::b1: int = storage::b;
//     state ::map_1_access: bool = storage::map1[::x];
//     state ::map_2_access: int = storage::map2[::address];
// }
// >>>

// typecheck_failure <<<
// state variable initialization type error
// @234..244: initializing expression has unexpected type `int`
// @227..231: expecting type `bool`
// state variable initialization type error
// @267..277: initializing expression has unexpected type `bool`
// @261..264: expecting type `int`
// state variable initialization type error
// @311..327: initializing expression has unexpected type `int`
// @304..308: expecting type `bool`
// state variable initialization type error
// @360..382: initializing expression has unexpected type `bool`
// @354..357: expecting type `int`
// >>>
