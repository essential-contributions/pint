const a = 11;

predicate A {
    var b = a;
    var c: int;
    constraint c > a * 2;
}

predicate B {
    var b = a < 22;
}

// parsed <<<
// const ::a = 11;
//
// predicate ::A {
//     var ::b;
//     var ::c: int;
//     constraint (::b == ::a);
//     constraint (::c > (::a * 2));
// }
//
// predicate ::B {
//     var ::b;
//     constraint (::b == (::a < 22));
// }
// >>>

// flattened <<<
// const ::a: int = 11;
//
// predicate ::A {
//     var ::b: int;
//     var ::c: int;
//     constraint (::b == 11);
//     constraint (::c > (11 * 2));
// }
//
// predicate ::B {
//     var ::b: bool;
//     constraint (::b == (11 < 22));
// }
// >>>
