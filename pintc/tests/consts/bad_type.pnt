const a: int = false;
const b: int = {11, 22};

const c = 33;

predicate test {
    // The type checker currently stops with the const type errors before getting to this constraint.
    var d: b256;
    constraint d == c;
}

// parsed <<<
// const ::b: int = {11, 22};
// const ::a: int = false;
// const ::c = 33;
//
// predicate ::test {
//     var ::d: b256;
//     constraint (::d == ::c);
// }
// >>>

// typecheck_failure <<<
// const initialization type error
// @37..45: const initializer has unexpected type `{int, int}`
// @31..34: expecting type `int`
// const initialization type error
// @15..20: const initializer has unexpected type `bool`
// @9..12: expecting type `int`
// >>>
