const a: int = false;
const b: int = {11, 22};

const c = 33;
var d: b256;
constraint d == c;

solve satisfy;

// parsed <<<
// const ::b: int = {11, 22};
// const ::a: int = false;
// const ::c = 33;
// var ::d: b256;
// constraint (::d == ::c);
// solve satisfy;
// >>>

// typecheck_failure <<<
// binary operator type error
// @91..92: operator `==` argument has unexpected type `int`
// @86..87: expecting type `b256`
// const initialization type error
// @37..45: const initializer has unexpected type `{int, int}`
// @31..34: expecting type `int`
// const initialization type error
// @15..20: const initializer has unexpected type `bool`
// @9..12: expecting type `int`
// constraint expression type error
// @75..92: constraint expression has unknown type
// @75..92: expecting type `bool`
// >>>
