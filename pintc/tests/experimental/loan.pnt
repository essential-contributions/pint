predicate test(
    r: real,  // quarterly repayment
    p: real,  // principal initially borrowed
    i: real,  // interest rate (per quarter)

    // parsed variables
    b1: real, // balance after one quarter
    b2: real, // balance after two quarters
    b3: real, // balance after three quarters
    b4: real, // balance owing at end
) {
    // Model for determining relationships between a 1 year loan repaying every quarter

    // variables
    constraint r == 260.0;   // quarterly repayment
    constraint p == 1000.0;  // principal initially borrowed
    constraint i == 0.04;    // interest rate (per quarter)

    constraint b1 == p * (1.0 + i) - r;
    constraint b2 == b1 * (1.0 + i) - r;
    constraint b3 == b2 * (1.0 + i) - r;
    constraint b4 == b3 * (1.0 + i) - r;
}

// parsed <<<
// predicate ::test(
//     ::r: real,
//     ::p: real,
//     ::i: real,
//     ::b1: real,
//     ::b2: real,
//     ::b3: real,
//     ::b4: real,
// ) {
//     constraint (::r == 2.6e2);
//     constraint (::p == 1e3);
//     constraint (::i == 4e-2);
//     constraint (::b1 == ((::p * (1e0 + ::i)) - ::r));
//     constraint (::b2 == ((::b1 * (1e0 + ::i)) - ::r));
//     constraint (::b3 == ((::b2 * (1e0 + ::i)) - ::r));
//     constraint (::b4 == ((::b3 * (1e0 + ::i)) - ::r));
// }
// >>>

// flattened <<<
// predicate ::test(
//     ::r: real,
//     ::p: real,
//     ::i: real,
//     ::b1: real,
//     ::b2: real,
//     ::b3: real,
//     ::b4: real,
// ) {
//     constraint (::r == 2.6e2);
//     constraint (::p == 1e3);
//     constraint (::i == 4e-2);
//     constraint (::b1 == ((::p * (1e0 + ::i)) - ::r));
//     constraint (::b2 == ((::b1 * (1e0 + ::i)) - ::r));
//     constraint (::b3 == ((::b2 * (1e0 + ::i)) - ::r));
//     constraint (::b4 == ((::b3 * (1e0 + ::i)) - ::r));
//     constraint __eq_set(__mut_keys(), {0});
// }
// >>>
