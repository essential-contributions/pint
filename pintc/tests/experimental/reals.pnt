predicate test(x: real, y: real) {
    constraint x in 1.0..4.0;
    constraint y in 1.0..4.0;

    constraint x + y == 3.3;
}

// parsed <<<
// predicate ::test(
//     ::x: real,
//     ::y: real,
// ) {
//     constraint ::x in 1e0..4e0;
//     constraint ::y in 1e0..4e0;
//     constraint ((::x + ::y) == 3.3e0);
// }
// >>>

// flattened <<<
// predicate ::test(
//     ::x: real,
//     ::y: real,
// ) {
//     constraint ((::x >= 1e0) && (::x <= 4e0));
//     constraint ((::y >= 1e0) && (::y <= 4e0));
//     constraint ((::x + ::y) == 3.3e0);
// }
// >>>
