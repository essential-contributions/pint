enum Colour = Red | Green | Blue;

predicate test {
    var a: real[5];
    var a1 = a[1];

    var b: real[Colour][3];
    var b_r_2 = b[Colour::Red][2];
}

// parsed <<<
// enum ::Colour = Red | Green | Blue;
// 
// predicate ::test {
//     var ::a: real[5];
//     var ::a1;
//     var ::b: real[3][::Colour];
//     var ::b_r_2;
//     constraint (::a1 == ::a[1]);
//     constraint (::b_r_2 == ::b[::Colour::Red][2]);
// }
// >>>

// flattened <<<
// enum ::Colour = Red | Green | Blue;
// 
// predicate ::test {
//     var ::a: real[5];
//     var ::a1: real;
//     var ::b: real[3][3];
//     var ::b_r_2: real;
//     constraint (::a1 == ::a[1]);
//     constraint (::b_r_2 == ::b[0][2]);
//     constraint __eq_set(__mut_keys(), {0});
// }
// >>>
