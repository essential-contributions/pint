predicate test() {
    let x = 1_100e3;
    let y = 1_100.500_123e0_000_00;
    let z = 1.2E5;

    constraint x / y > z;
}

// parsed <<<
// predicate ::test(
// ) {
//     let ::x = 1.1e6;
//     let ::y = 1.100500123e3;
//     let ::z = 1.2e5;
//     constraint ((::x / ::y) > ::z);
// }
// >>>

// flattened <<<
// predicate ::test(
// ) {
//     let ::x: real = 1.1e6;
//     let ::y: real = 1.100500123e3;
//     let ::z: real = 1.2e5;
//     constraint ((::x / ::y) > ::z);
// }
// >>>
