const a = 1.0 in [1.0, 2.0];
const b = 1.23 in [3.45, 2.2];
const e = 1.5 in 1.0..2.0;
const f = 1.1 in 3.1..2.2;

predicate Test {
    var g = 1.4 in [1.1, 2.9];
    var h = 1.3 in [3.9, 2.0];
    var i = 0.4 in 3.0..2.0;
    var j = 0.4 in 0.1..0.4;
}

// parsed <<<
// predicate Test {
//     var g = 1.4 in [1.1, 2.9];
//     var h = 1.3 in [3.9, 2.0];
//     var i = 0.4 in 3.0..2.0;
//     var j = 0.4 in 0.1..0.4;
// }
//
// const ::b = 1.23e0 in [3.45e0, 2.2e0];
// const ::e = 1.5e0 in 1e0..2e0;
// const ::a = 1e0 in [1e0, 2e0];
// const ::f = 1.1e0 in 3.1e0..2.2e0;
// >>>

// flattened <<<
// predicate ::Test {
//     var ::g;
//     var ::h;
//     var ::i;
//     var ::j;
//     constraint (::g == 1.4e0 in [1.1e0, 2.9e0]);
//     constraint (::h == 1.3e0 in [3.9e0, 2e0]);
//     constraint (::i == 4e-1 in 3e0..2e0);
//     constraint (::j == 4e-1 in 1e-1..4e-1);
// }
//
// const ::b: bool = false;
// const ::e: bool = true;
// const ::a: bool = true;
// const ::f: bool = false;
// >>>