// parsed <<<
// var ::e_old;
// var ::e_new;
// var ::w: int;
// var ::u: int;
// var ::v: int;
// var ::a: int[5];
// state ::x: int = __storage_get(0x000000000000000E000000000000000E000000000000000E000000000000000E);
// state ::y: int = __storage_get(0x000000000000000E000000000000000E000000000000000E000000000000000F);
// state ::z: int = __storage_get(0x000000000000000E000000000000000E000000000000000E000000000000000A);
// state ::external: int = __storage_get_extern(0x44E1AA05940F0A9C02572FCFFC641FA7B3A8F036F07C5B87F17D276E0957CF89, 0x0000000000000000000000000000000000000000000000000000000000000001);
// constraint (::e_old == ::external);
// constraint (::e_new == ::external');
// constraint (::w == (::x + 99));
// constraint (::u == (::y * 3));
// constraint (::v == (::z * ::z));
// constraint forall i in 0..4, { (::a[::i] == (::i * ::i)) };
// constraint ((::x' - ::x) == 1);
// constraint (::y' == (::y + 4));
// constraint (((::x' + ::y') > 89) && ((::x' * ::y') > 1932));
// constraint (::x < ::y);
// constraint (((::w + ::u) + ::v) == 2206);
// constraint ((::external' - ::external) == 1);
// solve satisfy;
// >>>

// flattened <<<
// var ::e_old: int;
// var ::e_new: int;
// var ::w: int;
// var ::u: int;
// var ::v: int;
// var ::a[0]: int;
// var ::a[1]: int;
// var ::a[2]: int;
// var ::a[3]: int;
// var ::a[4]: int;
// state ::x: int = __storage_get(0x000000000000000E000000000000000E000000000000000E000000000000000E);
// state ::y: int = __storage_get(0x000000000000000E000000000000000E000000000000000E000000000000000F);
// state ::z: int = __storage_get(0x000000000000000E000000000000000E000000000000000E000000000000000A);
// state ::external: int = __storage_get_extern(0x44E1AA05940F0A9C02572FCFFC641FA7B3A8F036F07C5B87F17D276E0957CF89, 0x0000000000000000000000000000000000000000000000000000000000000001);
// constraint (::e_old == ::external);
// constraint (::e_new == ::external');
// constraint (::w == (::x + 99));
// constraint (::u == (::y * 3));
// constraint (::v == (::z * ::z));
// constraint (((((1 && (::a[0] == (0 * 0))) && (::a[1] == (1 * 1))) && (::a[2] == (2 * 2))) && (::a[3] == (3 * 3))) && (::a[4] == (4 * 4)));
// constraint ((::x' - ::x) == 1);
// constraint (::y' == (::y + 4));
// constraint (((::x' + ::y') > 89) && ((::x' * ::y') > 1932));
// constraint (::x < ::y);
// constraint (((::w + ::u) + ::v) == 2206);
// constraint ((::external' - ::external) == 1);
// solve satisfy;
// >>>

state x: int = __storage_get(0x000000000000000E000000000000000E000000000000000E000000000000000E); // 42
state y: int = __storage_get(0x000000000000000E000000000000000E000000000000000E000000000000000F); // 43
state z: int = __storage_get(0x000000000000000E000000000000000E000000000000000E000000000000000A); // 44
state external: int = __storage_get_extern(
    0x44e1aa05940f0a9c02572fcffc641fa7b3a8f036f07c5b87f17d276e0957cf89,
    0x0000000000000000000000000000000000000000000000000000000000000001,
); // 69
var e_old = external;
var e_new = external';

var w: int = x + 99; // 141
var u: int = y * 3;  // 129
var v: int = z * z;  // 1936
var a: int[5];

constraint forall i in 0..4 {
    a[i] == i*i
};
constraint x' - x == 1; // x' == 43
constraint y' == y + 4; // y' == 47
constraint x' + y' > 89 && x' * y' > 1932; 
constraint x < y;
constraint w + u + v == 2206;
constraint external' - external == 1;

solve satisfy;
