// db <<<
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x0000000000000000000000000000000000000000000000000000000000000000 1 
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x0000000000000000000000000000000000000000000000000000000000000001 1 
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x0000000000000000000000000000000000000000000000000000000000000002 1 
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x0000000000000000000000000000000000000000000000000000000000000003 1 
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x0000000000000000000000000000000000000000000000000000000000000004 2 
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x0000000000000000000000000000000000000000000000000000000000000005 3 
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x0000000000000000000000000000000000000000000000000000000000000006 4 
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x0000000000000000000000000000000000000000000000000000000000000007 5 
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x9F3208695DB3A6F839DA4F287F3DA5A44604DFFEEBD28703394AF9502BC8B066 9 
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x9F3208695DB3A6F839DA4F287F3DA5A44604DFFEEBD28703394AF9502BC8B067 9 
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x9F3208695DB3A6F839DA4F287F3DA5A44604DFFEEBD28703394AF9502BC8B068 9 
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x9F3208695DB3A6F839DA4F287F3DA5A44604DFFEEBD28703394AF9502BC8B069 9 
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x447B9071B53FBB2A1C6F370531C80E382895F4C1642EFFE5E614DFD2E27E1E1F 42
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x8367F664ACD861645A0A170BACB4F97158630053111CB85B852433F055F83505 15
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x8367F664ACD861645A0A170BACB4F97158630053111CB85B852433F055F83506 15
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x8367F664ACD861645A0A170BACB4F97158630053111CB85B852433F055F83507 15
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0x8367F664ACD861645A0A170BACB4F97158630053111CB85B852433F055F83508 15
// >>>

extern Extern1(0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE) {
    storage {
        address: b256,
        address2: b256,
        map: (int => b256),
        map_in_map: (int => (b256 => int)),
        map_in_map_in_map: (int => (b256 => (int => b256))),
    }
}

intent Foo {
    state address = Extern1::storage::address;
    state address2 = Extern1::storage::address2;
    state map_entry = Extern1::storage::map[69];
    state map_in_map_entry = Extern1::storage::map_in_map[9][0x0000000000000001000000000000000200000000000000030000000000000004];
    state map_in_map_in_map_entry = Extern1::storage::map_in_map_in_map[88][0x0000000000000008000000000000000700000000000000060000000000000005][999];

    constraint address == 0x0000000000000001000000000000000100000000000000010000000000000001;
    constraint address2 == 0x0000000000000002000000000000000300000000000000040000000000000005;
    constraint map_entry == 0x0000000000000009000000000000000900000000000000090000000000000009;
    constraint map_in_map_entry == 42;
    constraint map_in_map_in_map_entry == 0x000000000000000F000000000000000F000000000000000F000000000000000F;

    constraint address' == 0x0000000000000011000000000000001100000000000000110000000000000011;
    constraint address2' == 0x0000000000000022000000000000003300000000000000440000000000000055;
    constraint map_entry' == 0x0000000000000099000000000000009900000000000000990000000000000099;
    constraint map_in_map_entry' - map_in_map_entry == 1;
    constraint map_in_map_in_map_entry' == 0x00000000000000FF00000000000000FF00000000000000FF00000000000000FF;
}
