[[data]]
predicate_to_solve = { predicate = "::Bar" }
state_mutations = [
  { key = [1], value = [3] },                # __vec_len(storage::v0)
  { key = [1, 0], value = [42] },            # storage::v0[0]
  { key = [1, 1], value = [43] },            # storage::v0[1]
  { key = [1, 2], value = [44] },            # storage::v0[2]
  { key = [2], value = [5] },                # __vec_len(storage::v1)
  { key = [2, 3], value = [16] },            # storage::v1[3]
  { key = [2, 4], value = [17] },            # storage::v1[4]
  { key = [3], value = [3] },                # __vec_len(storage::v2)
  { key = [3, 0], value = [1, 2, 3, 4] },    # storage::v2[0]
  { key = [3, 1], value = [] },              # storage::v2[1]
  { key = [3, 2], value = [9, 10, 11, 12] }, # storage::v2[2]
]

[[data]]
predicate_to_solve = { set = "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", predicate = "0x0000000000000000000000000000000000000000000000000000000000000000" }
state_mutations = [
  { key = [1], value = [3] },                # __vec_len(storage::v0)
  { key = [1, 0], value = [42] },            # storage::v0[0]
  { key = [1, 1], value = [43] },            # storage::v0[1]
  { key = [1, 2], value = [44] },            # storage::v0[2]
  { key = [2], value = [5] },                # __vec_len(storage::v1)
  { key = [2, 3], value = [16] },            # storage::v1[3]
  { key = [2, 4], value = [17] },            # storage::v1[4]
  { key = [3], value = [3] },                # __vec_len(storage::v2)
  { key = [3, 0], value = [1, 2, 3, 4] },    # storage::v2[0]
  { key = [3, 1], value = [] },              # storage::v2[1]
  { key = [3, 2], value = [9, 10, 11, 12] }, # storage::v2[2]
]
