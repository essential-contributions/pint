// db <<<
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE, 0, 42
// 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE, 1, 69
// 0xDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD, 0, 99
// 0xDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD, 1, 166
// >>>

// from external1.pnt
interface Bar {
    storage {
        x: int,
        y: int
    }
}

// from external0.pnt
interface Baz {
    storage {
        w: int,
        z: int
    }
}

const bar_addr = 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE;
const baz_addr = 0xDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD;

predicate Foo() {
    let x = Bar@[bar_addr]::storage::x;
    let x_post = Bar@[bar_addr]::storage::x';
    let y = Bar@[bar_addr]::storage::y;
    let y_post = Bar@[bar_addr]::storage::y';
    let w = Baz@[baz_addr]::storage::w;
    let w_post = Baz@[baz_addr]::storage::w';
    let z = Baz@[baz_addr]::storage::z;
    let z_post = Baz@[baz_addr]::storage::z';

    constraint x_post! - x! == 1;
    constraint y_post! - y! == 2;
    constraint w_post! - w! == 3;
    constraint z_post! - z! == 4;

    constraint Bar@[bar_addr]::storage::x'! - Bar@[bar_addr]::storage::x! == 1;
    constraint Bar@[bar_addr]::storage::y'! - Bar@[bar_addr]::storage::y! == 2;
    constraint Baz@[baz_addr]::storage::w'! - Baz@[baz_addr]::storage::w! == 3;
    constraint Baz@[baz_addr]::storage::z'! - Baz@[baz_addr]::storage::z! == 4;
}
