storage {
    u: { b256, int },
    t: { b256, { int, int } },
    w: { addr: b256, inner: { x: int, int } },
    map_to_tuples: ( int => { b256, { int, int } } ),
}

extern Foo(0x5AAC3B0C6DDDCBD755A1437AE556B725CC6143FE761ECDC2B38CE02D1FEFBE0E) {
    storage {
        u: { b256, int },
        t: { b256, { int, int } },
        w: { addr: b256, inner: { x: int, int } },
        map_to_tuples: ( int => { b256, { int, int } } ),
    }
}

intent Bar {
    state w = storage::w;
    state w0 = storage::w.addr;
    state w10 = storage::w.inner.x;
    state w11 = storage::w.inner.1;

    state foo_w = Foo::storage::w;
    state foo_w0 = Foo::storage::w.addr;
    state foo_w10 = Foo::storage::w.inner.x;
    state foo_w11 = Foo::storage::w.inner.1;

    state map_to_tuples_69 = storage::map_to_tuples[69];
    state map_to_tuples_69_0 = storage::map_to_tuples[69].0;
    state map_to_tuples_69_1_0 = storage::map_to_tuples[69].1.0;
    state map_to_tuples_69_1_1 = storage::map_to_tuples[69].1.1;

    state foo_map_to_tuples_69 = Foo::storage::map_to_tuples[69];
    state foo_map_to_tuples_69_0 = Foo::storage::map_to_tuples[69].0;
    state foo_map_to_tuples_69_1_0 = Foo::storage::map_to_tuples[69].1.0;
    state foo_map_to_tuples_69_1_1 = Foo::storage::map_to_tuples[69].1.1;

    // constraint w' == {0x0000000000000009000000000000000900000000000000090000000000000009, {2, 3}};
    constraint w0' == 0x0000000000000009000000000000000900000000000000090000000000000009;
    constraint w10' == 2;
    constraint w11' == 3;

    // constraint foo_w' == {0x0000000000000008000000000000000800000000000000080000000000000008, {4, 5}};
    constraint foo_w0' == 0x0000000000000008000000000000000800000000000000080000000000000008;
    constraint foo_w10' == 4;
    constraint foo_w11' == 5;

    // constraint map_to_tuples_69' == {0x0000000000000005000000000000000500000000000000050000000000000005, {12345, 54321}};
    constraint map_to_tuples_69_0' == 0x0000000000000005000000000000000500000000000000050000000000000005;
    constraint map_to_tuples_69_1_0' == 12345;
    constraint map_to_tuples_69_1_1' == 54321;

    // constraint foo_map_to_tuples_69' == {0x0000000000000004000000000000000400000000000000040000000000000004, {12345, 54321}};
    constraint foo_map_to_tuples_69_0' == 0x0000000000000004000000000000000400000000000000040000000000000004;
    constraint foo_map_to_tuples_69_1_0' == 2345;
    constraint foo_map_to_tuples_69_1_1' == 5432;
}
