interface Baz {
    storage {
        x: int,
        y: int,
    }

    predicate Foo {
        pub var x: int;
        pub var y: int;
        pub var q: b256;
        pub var c: { int, { int, b256 }, bool };
    }

    predicate Bar {
        pub var w: int;
        pub var p: int;
    }
}

predicate Simple {
    var foo_addr = 0x0000000000000000000000000000000000000000000000000000000000000000;

    interface BazInstance = Baz(0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE);
    predicate FooInstance1 = BazInstance::Foo(foo_addr);

    var x = FooInstance1::x;
    var y = FooInstance1::y;
    var z = FooInstance1::x * FooInstance1::y;
    constraint FooInstance1::q == 0x0000000000000001000000000000000100000000000000010000000000000001;

    constraint FooInstance1::c == 
        { 42, { 43, 0x0000000000000008000000000000000800000000000000080000000000000008}, true };
    constraint FooInstance1::c.0 == 42;
    constraint FooInstance1::c.1 == { 43, 0x0000000000000008000000000000000800000000000000080000000000000008};
    constraint FooInstance1::c.1.0 == 43;
    constraint FooInstance1::c.1.1 == 0x0000000000000008000000000000000800000000000000080000000000000008;
    constraint FooInstance1::c.2 == true;

    predicate FooInstance2 = BazInstance::Foo(foo_addr);
    constraint FooInstance2::x * FooInstance2::y == 2898;
    constraint FooInstance2::q == 0x0000000000000003000000000000000300000000000000030000000000000003;

    constraint FooInstance2::c == 
        { 52, { 53, 0x0000000000000007000000000000000700000000000000070000000000000007}, false };
    constraint FooInstance2::c.0 == 52;
    constraint FooInstance2::c.1 == { 53, 0x0000000000000007000000000000000700000000000000070000000000000007};
    constraint FooInstance2::c.1.0 == 53;
    constraint FooInstance2::c.1.1 == 0x0000000000000007000000000000000700000000000000070000000000000007;
    constraint FooInstance2::c.2 == false;
}
