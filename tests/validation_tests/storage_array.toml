[[data]]
predicate_to_solve = { predicate = "::Bar" }
state_mutations = [
  { key = [0, 0], value = [2] },          # storage::u[0]
  { key = [0, 1], value = [3] },          # storage::u[1]
  { key = [1, 0], value = [1, 1, 1, 1] }, # storage::t[0]
  { key = [1, 1], value = [2, 2, 2, 2] }, # storage::t[1]
  { key = [1, 2], value = [3, 3, 3, 3] }, # storage::t[2]
  { key = [2, 0], value = [42] },         # storage::v[0][0]
  { key = [2, 1], value = [43] },         # storage::v[0][1]
  { key = [2, 2], value = [44] },         # storage::v[0][2]
  { key = [2, 3], value = [52] },         # storage::v[1][0]
  { key = [2, 4], value = [53] },         # storage::v[1][1]
  { key = [2, 5], value = [54] },         # storage::v[1][2]
  { key = [3, 69, 0], value = [99] },     # map_to_arrays[69][0]
  { key = [3, 69, 1], value = [100] },    # map_to_arrays[69][1]
  { key = [3, 69, 2], value = [101] },    # map_to_arrays[69][2]
]

[[data]]
predicate_to_solve = { set = "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", predicate = "0x0000000000000000000000000000000000000000000000000000000000000000" }
state_mutations = [
  { key = [0, 0], value = [12] },             # FooInstance::storage::u[0]       
  { key = [0, 1], value = [13] },             # FooInstance::storage::u[1]       
  { key = [1, 0], value = [11, 11, 11, 11] }, # FooInstance::storage::t[0]       
  { key = [1, 1], value = [12, 12, 12, 12] }, # FooInstance::storage::t[1]       
  { key = [1, 2], value = [13, 13, 13, 13] }, # FooInstance::storage::t[2]
  { key = [2, 0], value = [142] },            # FooInstance::storage::v[0][0]
  { key = [2, 1], value = [143] },            # FooInstance::storage::v[0][1]
  { key = [2, 2], value = [144] },            # FooInstance::storage::v[0][2]
  { key = [2, 3], value = [152] },            # FooInstance::storage::v[1][0]
  { key = [2, 4], value = [153] },            # FooInstance::storage::v[1][1]
  { key = [2, 5], value = [154] },            # FooInstance::storage::v[1][2]
  { key = [3, 69, 0], value = [199] },        # FooInstance::map_to_arrays[69][0]
  { key = [3, 69, 1], value = [1100] },       # FooInstance::map_to_arrays[69][1]
  { key = [3, 69, 2], value = [1101] },       # FooInstance::map_to_arrays[69][2]
]
