storage {
    u: int[2],
    t: b256[3],
    v: int[2][3],
    map_to_arrays: ( int => int[3] ),
}

interface Foo {
    storage {
        u: int[2],
        t: b256[3],
        v: int[2][3],
        map_to_arrays: ( int => int[3] ),
    }
}


predicate Bar() {
    let addr = 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE;

    constraint storage::u := [2, 3];
    constraint storage::t := [
        0x0000000000000001000000000000000100000000000000010000000000000001,
        0x0000000000000002000000000000000200000000000000020000000000000002,
        0x0000000000000003000000000000000300000000000000030000000000000003,
    ];
    constraint storage::v := [
        [42, 43, 44], 
        [52, 53, 54], 
    ];
    constraint storage::map_to_arrays[69] := [99, 100, 101];

    let u = storage::u'!;
    let u0 = storage::u[0]'!;
    let u1 = storage::u[1]'!;

    let t = storage::t'!;
    let t0 = storage::t[0]'!;
    let t1 = storage::t[1]'!;
    let t2 = storage::t[2]'!;

    let v = storage::v'!;
    let v0 = storage::v[0]'!;
    let v1 = storage::v[1]'!;
    let v00 = storage::v[0][0]'!;
    let v01 = storage::v[0][1]'!;
    let v02 = storage::v[0][2]'!;
    let v10 = storage::v[1][0]'!;
    let v11 = storage::v[1][1]'!;
    let v12 = storage::v[1][2]'!;

    let map_to_arrays_69 = storage::map_to_arrays[69]'!;
    let map_to_arrays_69_0 = storage::map_to_arrays[69][0]'!;
    let map_to_arrays_69_1 = storage::map_to_arrays[69][1]'!;
    let map_to_arrays_69_2 = storage::map_to_arrays[69][2]'!;

    constraint u == [2, 3];
    constraint u[0] == 2;
    constraint u[1] == 3;
    constraint u0 == 2;
    constraint u1 == 3;

    constraint t == [
        0x0000000000000001000000000000000100000000000000010000000000000001,
        0x0000000000000002000000000000000200000000000000020000000000000002,
        0x0000000000000003000000000000000300000000000000030000000000000003,
    ];
    constraint t[0] == 0x0000000000000001000000000000000100000000000000010000000000000001;
    constraint t[1] == 0x0000000000000002000000000000000200000000000000020000000000000002;
    constraint t[2] == 0x0000000000000003000000000000000300000000000000030000000000000003;
    constraint t0 == 0x0000000000000001000000000000000100000000000000010000000000000001;
    constraint t1 == 0x0000000000000002000000000000000200000000000000020000000000000002;
    constraint t2 == 0x0000000000000003000000000000000300000000000000030000000000000003;

    constraint v == [
        [42, 43, 44], 
        [52, 53, 54], 
    ];
    constraint v[0] == [42, 43, 44];
    constraint v[1] == [52, 53, 54];
    constraint v[0][0] == 42;
    constraint v[0][1] == 43;
    constraint v[0][2] == 44;
    constraint v[1][0] == 52;
    constraint v[1][1] == 53;
    constraint v[1][2] == 54;

    constraint v0 == [42, 43, 44];
    constraint v0[0] == 42;
    constraint v0[1] == 43;
    constraint v0[2] == 44;
    constraint v1 == [52, 53, 54];
    constraint v1[0] == 52;
    constraint v1[1] == 53;
    constraint v1[2] == 54;

    constraint v00 == 42;
    constraint v01 == 43;
    constraint v02 == 44;
    constraint v10 == 52;
    constraint v11 == 53;
    constraint v12 == 54;

    constraint map_to_arrays_69 == [99, 100, 101];
    constraint map_to_arrays_69[0] == 99;
    constraint map_to_arrays_69[1] == 100;
    constraint map_to_arrays_69[2] == 101;
    constraint map_to_arrays_69_0 == 99;
    constraint map_to_arrays_69_1 == 100;
    constraint map_to_arrays_69_2 == 101;

    let foo_u =  Foo@[addr]::storage::u'!;
    let foo_u0 = Foo@[addr]::storage::u[0]'!;
    let foo_u1 = Foo@[addr]::storage::u[1]'!;

    let foo_t = Foo@[addr]::storage::t'!;
    let foo_t0 = Foo@[addr]::storage::t[0]'!;
    let foo_t1 = Foo@[addr]::storage::t[1]'!;
    let foo_t2 = Foo@[addr]::storage::t[2]'!;

    let foo_v = Foo@[addr]::storage::v'!;
    let foo_v0 = Foo@[addr]::storage::v[0]'!;
    let foo_v1 = Foo@[addr]::storage::v[1]'!;
    let foo_v00 = Foo@[addr]::storage::v[0][0]'!;
    let foo_v01 = Foo@[addr]::storage::v[0][1]'!;
    let foo_v02 = Foo@[addr]::storage::v[0][2]'!;
    let foo_v10 = Foo@[addr]::storage::v[1][0]'!;
    let foo_v11 = Foo@[addr]::storage::v[1][1]'!;
    let foo_v12 = Foo@[addr]::storage::v[1][2]'!;

    let foo_map_to_arrays_69 = Foo@[addr]::storage::map_to_arrays[69]'!;
    let foo_map_to_arrays_69_0 = Foo@[addr]::storage::map_to_arrays[69][0]'!;
    let foo_map_to_arrays_69_1 = Foo@[addr]::storage::map_to_arrays[69][1]'!;
    let foo_map_to_arrays_69_2 = Foo@[addr]::storage::map_to_arrays[69][2]'!;

    constraint foo_u == [12, 13];
    constraint foo_u[0] == 12;
    constraint foo_u[1] == 13;
    constraint foo_u0 == 12;
    constraint foo_u1 == 13;

    constraint foo_t == [
        0x000000000000000B000000000000000B000000000000000B000000000000000B,
        0x000000000000000C000000000000000C000000000000000C000000000000000C,
        0x000000000000000D000000000000000D000000000000000D000000000000000D,
    ];
    constraint foo_t[0] == 0x000000000000000B000000000000000B000000000000000B000000000000000B;
    constraint foo_t[1] == 0x000000000000000C000000000000000C000000000000000C000000000000000C;
    constraint foo_t[2] == 0x000000000000000D000000000000000D000000000000000D000000000000000D;
    constraint foo_t0 == 0x000000000000000B000000000000000B000000000000000B000000000000000B;
    constraint foo_t1 == 0x000000000000000C000000000000000C000000000000000C000000000000000C;
    constraint foo_t2 == 0x000000000000000D000000000000000D000000000000000D000000000000000D;

    constraint foo_v == [
        [142, 143, 144], 
        [152, 153, 154], 
    ];
    constraint foo_v[0] == [142, 143, 144];
    constraint foo_v[1] == [152, 153, 154];
    constraint foo_v[0][0] == 142;
    constraint foo_v[0][1] == 143;
    constraint foo_v[0][2] == 144;
    constraint foo_v[1][0] == 152;
    constraint foo_v[1][1] == 153;
    constraint foo_v[1][2] == 154;

    constraint foo_v0 == [142, 143, 144];
    constraint foo_v0[0] == 142;
    constraint foo_v0[1] == 143;
    constraint foo_v0[2] == 144;
    constraint foo_v1 == [152, 153, 154];
    constraint foo_v1[0] == 152;
    constraint foo_v1[1] == 153;
    constraint foo_v1[2] == 154;

    constraint foo_v00 == 142;
    constraint foo_v01 == 143;
    constraint foo_v02 == 144;
    constraint foo_v10 == 152;
    constraint foo_v11 == 153;
    constraint foo_v12 == 154;

    constraint foo_map_to_arrays_69 == [199, 1100, 1101];
    constraint foo_map_to_arrays_69[0] == 199;
    constraint foo_map_to_arrays_69[1] == 1100;
    constraint foo_map_to_arrays_69[2] == 1101;
    constraint foo_map_to_arrays_69_0 == 199;
    constraint foo_map_to_arrays_69_1 == 1100;
    constraint foo_map_to_arrays_69_2 == 1101;
}
