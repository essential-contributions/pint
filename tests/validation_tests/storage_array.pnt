storage {
    u: int[2],
    t: b256[3],
    v: int[2][3],
    map_to_arrays: ( int => int[3] ),
}

interface Foo {
    storage {
        u: int[2],
        t: b256[3],
        v: int[2][3],
        map_to_arrays: ( int => int[3] ),
    }
}

predicate Bar {
    interface FooInstance = Foo(0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE);

    state u = storage::u;
    state u0 = mut storage::u[0];
    state u1 = mut storage::u[1];

    state t = mut storage::t;
    state t0 = mut storage::t[0];
    state t1 = mut storage::t[1];
    state t2 = mut storage::t[2];

    state v = storage::v;
    state v0 = storage::v[0];
    state v1 = storage::v[1];
    state v00 = mut storage::v[0][0];
    state v01 = mut storage::v[0][1];
    state v02 = mut storage::v[0][2];
    state v10 = mut storage::v[1][0];
    state v11 = mut storage::v[1][1];
    state v12 = mut storage::v[1][2];

    state map_to_arrays_69 = storage::map_to_arrays[69];
    state map_to_arrays_69_0 = mut storage::map_to_arrays[69][0];
    state map_to_arrays_69_1 = mut storage::map_to_arrays[69][1];
    state map_to_arrays_69_2 = mut storage::map_to_arrays[69][2];

    constraint u' == [2, 3];
    constraint (u')[0] == 2;
    constraint (u')[1] == 3;
    constraint u0' == 2;
    constraint u1' == 3;

    constraint t' == [
        0x0000000000000001000000000000000100000000000000010000000000000001,
        0x0000000000000002000000000000000200000000000000020000000000000002,
        0x0000000000000003000000000000000300000000000000030000000000000003,
    ];
    constraint (t')[0] == 0x0000000000000001000000000000000100000000000000010000000000000001;
    constraint (t')[1] == 0x0000000000000002000000000000000200000000000000020000000000000002;
    constraint (t')[2] == 0x0000000000000003000000000000000300000000000000030000000000000003;
    constraint t0' == 0x0000000000000001000000000000000100000000000000010000000000000001;
    constraint t1' == 0x0000000000000002000000000000000200000000000000020000000000000002;
    constraint t2' == 0x0000000000000003000000000000000300000000000000030000000000000003;

    constraint v' == [
        [42, 43, 44], 
        [52, 53, 54], 
    ];
    constraint (v')[0] == [42, 43, 44];
    constraint (v')[1] == [52, 53, 54];
    constraint (v')[0][0] == 42;
    constraint (v')[0][1] == 43;
    constraint (v')[0][2] == 44;
    constraint (v')[1][0] == 52;
    constraint (v')[1][1] == 53;
    constraint (v')[1][2] == 54;

    constraint v0' == [42, 43, 44];
    constraint (v0')[0] == 42;
    constraint (v0')[1] == 43;
    constraint (v0')[2] == 44;
    constraint v1' == [52, 53, 54];
    constraint (v1')[0] == 52;
    constraint (v1')[1] == 53;
    constraint (v1')[2] == 54;

    constraint v00' == 42;
    constraint v01' == 43;
    constraint v02' == 44;
    constraint v10' == 52;
    constraint v11' == 53;
    constraint v12' == 54;

    constraint map_to_arrays_69' == [99, 100, 101];
    constraint (map_to_arrays_69')[0] == 99;
    constraint (map_to_arrays_69')[1] == 100;
    constraint (map_to_arrays_69')[2] == 101;
    constraint map_to_arrays_69_0' == 99;
    constraint map_to_arrays_69_1' == 100;
    constraint map_to_arrays_69_2' == 101;

    state foo_u =  FooInstance::storage::u;
    state foo_u0 = FooInstance::storage::u[0];
    state foo_u1 = FooInstance::storage::u[1];

    state foo_t = FooInstance::storage::t;
    state foo_t0 = FooInstance::storage::t[0];
    state foo_t1 = FooInstance::storage::t[1];
    state foo_t2 = FooInstance::storage::t[2];

    state foo_v = FooInstance::storage::v;
    state foo_v0 = FooInstance::storage::v[0];
    state foo_v1 = FooInstance::storage::v[1];
    state foo_v00 = FooInstance::storage::v[0][0];
    state foo_v01 = FooInstance::storage::v[0][1];
    state foo_v02 = FooInstance::storage::v[0][2];
    state foo_v10 = FooInstance::storage::v[1][0];
    state foo_v11 = FooInstance::storage::v[1][1];
    state foo_v12 = FooInstance::storage::v[1][2];

    state foo_map_to_arrays_69 = FooInstance::storage::map_to_arrays[69];
    state foo_map_to_arrays_69_0 = FooInstance::storage::map_to_arrays[69][0];
    state foo_map_to_arrays_69_1 = FooInstance::storage::map_to_arrays[69][1];
    state foo_map_to_arrays_69_2 = FooInstance::storage::map_to_arrays[69][2];

    constraint foo_u' == [12, 13];
    constraint (foo_u')[0] == 12;
    constraint (foo_u')[1] == 13;
    constraint foo_u0' == 12;
    constraint foo_u1' == 13;

    constraint foo_t' == [
        0x000000000000000B000000000000000B000000000000000B000000000000000B,
        0x000000000000000C000000000000000C000000000000000C000000000000000C,
        0x000000000000000D000000000000000D000000000000000D000000000000000D,
    ];
    constraint (foo_t')[0] == 0x000000000000000B000000000000000B000000000000000B000000000000000B;
    constraint (foo_t')[1] == 0x000000000000000C000000000000000C000000000000000C000000000000000C;
    constraint (foo_t')[2] == 0x000000000000000D000000000000000D000000000000000D000000000000000D;
    constraint foo_t0' == 0x000000000000000B000000000000000B000000000000000B000000000000000B;
    constraint foo_t1' == 0x000000000000000C000000000000000C000000000000000C000000000000000C;
    constraint foo_t2' == 0x000000000000000D000000000000000D000000000000000D000000000000000D;

    constraint foo_v' == [
        [142, 143, 144], 
        [152, 153, 154], 
    ];
    constraint (foo_v')[0] == [142, 143, 144];
    constraint (foo_v')[1] == [152, 153, 154];
    constraint (foo_v')[0][0] == 142;
    constraint (foo_v')[0][1] == 143;
    constraint (foo_v')[0][2] == 144;
    constraint (foo_v')[1][0] == 152;
    constraint (foo_v')[1][1] == 153;
    constraint (foo_v')[1][2] == 154;

    constraint foo_v0' == [142, 143, 144];
    constraint (foo_v0')[0] == 142;
    constraint (foo_v0')[1] == 143;
    constraint (foo_v0')[2] == 144;
    constraint foo_v1' == [152, 153, 154];
    constraint (foo_v1')[0] == 152;
    constraint (foo_v1')[1] == 153;
    constraint (foo_v1')[2] == 154;

    constraint foo_v00' == 142;
    constraint foo_v01' == 143;
    constraint foo_v02' == 144;
    constraint foo_v10' == 152;
    constraint foo_v11' == 153;
    constraint foo_v12' == 154;

    constraint foo_map_to_arrays_69' == [199, 1100, 1101];
    constraint (foo_map_to_arrays_69')[0] == 199;
    constraint (foo_map_to_arrays_69')[1] == 1100;
    constraint (foo_map_to_arrays_69')[2] == 1101;
    constraint foo_map_to_arrays_69_0' == 199;
    constraint foo_map_to_arrays_69_1' == 1100;
    constraint foo_map_to_arrays_69_2' == 1101;
}
